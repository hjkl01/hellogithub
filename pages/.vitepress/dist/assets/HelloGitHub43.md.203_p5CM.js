import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const E=JSON.parse('{"title":"《HelloGitHub》第 43 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub43.md","filePath":"HelloGitHub43.md"}'),n={name:"HelloGitHub43.md"},e=t(`<h1 id="《hellogithub》第-43-期" tabindex="-1">《HelloGitHub》第 43 期 <a class="header-anchor" href="#《hellogithub》第-43-期" aria-label="Permalink to &quot;《HelloGitHub》第 43 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/43" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tmux/tmux" target="_blank" rel="noreferrer">tmux</a>：一个终端复用工具，可极大的提高工作效率。</p><ul><li>提供了强劲的、易于使用的命令行界面</li><li>可横向和纵向分割窗口</li><li>窗格可以自由移动和调整大小，或直接利用四个预设布局之一</li><li>可在多个缓冲区进行复制和粘贴</li><li>可通过交互式菜单来选择窗口、会话及客户端</li><li>等等</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/36836475.png" style="max-width:80%;"></p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dotnet/BenchmarkDotNet" target="_blank" rel="noreferrer">BenchmarkDotNet</a>：功能强大的用于基准测试 .NET 库</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/12191244.png" style="max-width:80%;"></p><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/CppCon/CppCon2019" target="_blank" rel="noreferrer">CppCon2019</a>：C++ 2019 大会的幻灯片和相关材料集合</p><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/caozhiyi/CppNet" target="_blank" rel="noreferrer">CppNet</a>：一个封装在 Tcp 协议上的 Proactor 模式 multi-thread 网络库。包含 OS 接口调用、回调处理、定时器、缓存管理等，这里有从操作系统到应用层的所有网络细节，便于初学者学习和实践。</p><ul><li>简单：只导出了最少量的接口，其声明都类似系统 socket API。对客户端而言，只新增了一个 buffer 类型</li><li>快速：采用性能最优的 epoll 和 IOCP 做事件驱动，惊群处理交由内核。每个连接都独享一个内存池，从内存池中申请的内存都由智能指针管理</li><li>清晰：结构上分为事件驱动，会话管理，接口三层，通过回调向上通知。模块之间职责分工明确，最大的类不超过 500 行代码</li></ul><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/sharkdp/dbg-macro" target="_blank" rel="noreferrer">dbg-macro</a>：打日志是 C++ 开发中必不可少的一种 debug 方式，<a href="https://github.com/sharkdp/dbg-macro" target="_blank" rel="noreferrer">dbg-macro</a> 受 <a href="https://www.rust-lang.org" target="_blank" rel="noreferrer">rust-lang</a> 中 的 <a href="https://doc.rust-lang.org/std/macro.dbg.html" target="_blank" rel="noreferrer">dbg</a> 启发，提供比 printf 和 std::cout 更好的宏函数。主要有如下特点：</p><ul><li>美观的彩色输出（当输出不是交互式终端时，颜色将自动禁用）</li><li>兼容 C++11，并且是 header-only</li><li>支持基础类型和 STL 容器类型的输出</li><li>除了基本信息外，还输出变量名和类型</li><li>启用 DBG_MACRO_DISABLE 生成 release 版</li></ul><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;vector&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;dbg.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// You can use &quot;dbg(..)&quot; in expressions:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::string message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // [example.cpp:15 (main)] message = &quot;hello&quot; (std::string)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // [example.cpp:18 (main)] 3 * a = 6 (int)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;int&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers{b, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(numbers);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // [example.cpp:21 (main)] numbers = {7, 13, 42} (size: 3) (std::vector&lt;int&gt;)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;this line is executed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // [example.cpp:23 (main)] this line is executed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/192787774.png" style="max-width:80%;"></p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/allegro/bigcache" target="_blank" rel="noreferrer">bigcache</a>：基于 Go 语言的高性能大缓存库。在 Ubuntu 18.04 LTS，机器配置 i7-6700K CPU @ 4.00GHz with 32GB of RAM 上性能测试结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>go version</span></span>
<span class="line"><span>go version go1.13 linux/amd64</span></span>
<span class="line"><span></span></span>
<span class="line"><span>cd caches_bench; go test -bench=. -benchmem -benchtime=4s ./... -timeout 30m</span></span>
<span class="line"><span>goos: linux</span></span>
<span class="line"><span>goarch: amd64</span></span>
<span class="line"><span>pkg: github.com/allegro/bigcache/v2/caches_bench</span></span>
<span class="line"><span>BenchmarkMapSet-8                     	12999889	       376 ns/op	     199 B/op	       3 allocs/op</span></span>
<span class="line"><span>BenchmarkConcurrentMapSet-8           	 4355726	      1275 ns/op	     337 B/op	       8 allocs/op</span></span>
<span class="line"><span>BenchmarkFreeCacheSet-8               	11068976	       703 ns/op	     328 B/op	       2 allocs/op</span></span>
<span class="line"><span>BenchmarkBigCacheSet-8                	10183717	       478 ns/op	     304 B/op	       2 allocs/op</span></span>
<span class="line"><span>BenchmarkMapGet-8                     	16536015	       324 ns/op	      23 B/op	       1 allocs/op</span></span>
<span class="line"><span>BenchmarkConcurrentMapGet-8           	13165708	       401 ns/op	      24 B/op	       2 allocs/op</span></span>
<span class="line"><span>BenchmarkFreeCacheGet-8               	10137682	       690 ns/op	     136 B/op	       2 allocs/op</span></span>
<span class="line"><span>BenchmarkBigCacheGet-8                	11423854	       450 ns/op	     152 B/op	       4 allocs/op</span></span>
<span class="line"><span>BenchmarkBigCacheSetParallel-8        	34233472	       148 ns/op	     317 B/op	       3 allocs/op</span></span>
<span class="line"><span>BenchmarkFreeCacheSetParallel-8       	34222654	       268 ns/op	     350 B/op	       3 allocs/op</span></span>
<span class="line"><span>BenchmarkConcurrentMapSetParallel-8   	19635688	       240 ns/op	     200 B/op	       6 allocs/op</span></span>
<span class="line"><span>BenchmarkBigCacheGetParallel-8        	60547064	        86.1 ns/op	     152 B/op	       4 allocs/op</span></span>
<span class="line"><span>BenchmarkFreeCacheGetParallel-8       	50701280	       147 ns/op	     136 B/op	       3 allocs/op</span></span>
<span class="line"><span>BenchmarkConcurrentMapGetParallel-8   	27353288	       175 ns/op	      24 B/op	       2 allocs/op</span></span>
<span class="line"><span>PASS</span></span>
<span class="line"><span>ok  	github.com/allegro/bigcache/v2/caches_bench	256.257s</span></span></code></pre></div><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/GoAdminGroup/go-admin" target="_blank" rel="noreferrer">go-admin</a>：基于 Golang 语言的数据可视化与管理平台。特性如下：</p><ul><li>🚀高生产效率：10 分钟内做一个好看的管理后台</li><li>🎨主题：默认为 adminlte，更多好看的主题正在制作中，欢迎给我们留言</li><li>🔢插件化：提供插件使用，真正实现一个插件解决不了问题，那就两个</li><li>✅认证：开箱即用的 rbac 认证系统</li><li>⚙️框架支持：支持大部分框架接入，让你更容易去上手和扩展</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/137854081.png" style="max-width:80%;"></p><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/danicat/pacgo" target="_blank" rel="noreferrer">pacgo</a>：基于 Go 实现的终端吃豆人游戏</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/148397397.jpg" style="max-width:80%;"></p><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tair-opensource/RedisShake" target="_blank" rel="noreferrer">RedisShake</a>：阿里开源的用于 redis 数据同步的工具。原理图如下：</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/173063554.png" style="max-width:80%;"></p><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/rs/zerolog" target="_blank" rel="noreferrer">zerolog</a>：一个速度快、专门用于输出 JSON 格式日志的库。还在为解析不规则的日志而烦恼吗？有了 zerolog 你可以跳起来了！当然它还有低效但可在控制台输出漂亮日志的模式，快去试试吧。示例代码：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rs/zerolog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/rs/zerolog/log</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    zerolog.TimeFieldFormat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zerolog.TimeFormatUnix</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Output: {&quot;time&quot;:1516134303,&quot;level&quot;:&quot;info&quot;,&quot;message&quot;:&quot;hello world&quot;}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/91054480.png" style="max-width:80%;"></p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/MZCretin/AutoUpdateProject" target="_blank" rel="noreferrer">AutoUpdateProject</a>：一个简单易用、接入方便、UI 多样的 Android 内实现在线更新的库。示例代码：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//更新库配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UpdateConfig updateConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UpdateConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDebug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//是否是Debug模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBaseUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://www.cretinzp.com/system/versioninfo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//当 dataSourceType 为 DATA_SOURCE_TYPE_URL 时，配置此接口用于获取更新信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMethodType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TypeConfig.METHOD_GET)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//当 dataSourceType 为 DATA_SOURCE_TYPE_URL 时，设置请求的方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDataSourceType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TypeConfig.DATA_SOURCE_TYPE_URL)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置获取更新信息的方式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setShowNotification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//配置更新的过程中是否在通知栏显示进度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setNotificationIconRes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R.mipmap.download_icon)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//配置通知栏显示的图标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setUiThemeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TypeConfig.UI_THEME_AUTO)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//配置 UI 的样式，一种有 12 种样式可供选择</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRequestHeaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//当 dataSourceType 为 DATA_SOURCE_TYPE_URL 时，设置请求的请求头</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRequestParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//当 dataSourceType 为 DATA_SOURCE_TYPE_URL 时，设置请求的请求参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCustomActivityClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CustomActivity.class)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//如果你选择的 UI 样式为 TypeConfig.UI_THEME_CUSTOM，那么你需要自定义一个 Activity 继承自 RootActivity 并参照 demo 实现功能，在此处填写自定义 Activity 的 class</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setModelClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UpdateModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AppUpdateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, updateConfig);</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/84809523.png" style="max-width:80%;"></p><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/elunez/eladmin" target="_blank" rel="noreferrer">eladmin</a>：基于 Spring Boot 2.1.0、Vue 的前后端分离的后台管理系统，支持数据字典与数据权限管理、一键生成前后端代码、前端菜单动态路由等。基于 Spring Boot2.1.0 框架，涉及的技术栈：非关系数据库 redis、接口测试工具 swagger、druid 数据源驱动、邮件依赖（javax.mail）、三方支付和云存储 SDK、页面模板引擎 freemarker。技术栈丰富，初学者可以作为实战项目学习和使用</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/161757837.png" style="max-width:80%;"></p><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/seaswalker/spring-analysis" target="_blank" rel="noreferrer">spring-analysis</a>：Spring 框架源码讲解。包括：spring-core、spring-aop、spring-context、spring-taskspring-mvc 等部分</p><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/bchao1/chart-race-react" target="_blank" rel="noreferrer">chart-race-react</a>：一个简单易用的 Bar Chart Race（长条图赛跑动画） React 组件。示例代码：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ReactDOM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-dom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BarChart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;chart-race-react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReactDOM.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BarChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;, document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/216373471.gif" style="max-width:80%;"></p><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/yinxin630/fiora" target="_blank" rel="noreferrer">fiora</a>：一个功能丰富、支持多端的在线聊天室。它界面小清新，支持基本的聊天功能的同时还有好玩的消息朗读功能。项目上基于 TypeScript + React 16.9 代码逻辑清晰、注释较为完善，适合用来学习 node.js、 TypeScript、React 等技术</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/51762221.png" style="max-width:80%;"></p><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/cnwhy/nzh" target="_blank" rel="noreferrer">nzh</a>：阿拉伯数字与中文数字相互转化的 JS 库。示例代码如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nzhcn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Nzh.cn;                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用简体中文,  另外有 Nzh.hk -- 繁体中文</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nzhcn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100111</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 转中文小写 &gt;&gt; 十万零一百一十一</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nzhcn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100111</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 转中文大写 &gt;&gt; 壹拾万零壹佰壹拾壹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nzhcn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.23456789e+21&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 科学记数法字符串 &gt;&gt; 十二万三千四百五十六万万七千八百九十万亿</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nzhcn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMoney</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100111.11&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 转中文金额 &gt;&gt; 人民币壹拾万零壹佰壹拾壹元壹角壹分</span></span></code></pre></div><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/request/request" target="_blank" rel="noreferrer">request</a>： JavaScript 简单、易用的 HTTP 请求客户端。示例代码：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;request&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://hellogithub.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果请求发生错误将被打印</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;statusCode:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.statusCode); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出返回的状态码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;body:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出返回的 HTML </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/microsoft/SandDance" target="_blank" rel="noreferrer">SandDance</a>：微软开源的数据可视化库。使用单元可视化，将数据库中的行一对一映射到屏幕中。在进行数据交互时，视图可无缝平滑过渡，展示效果炫酷</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/156293506.gif" style="max-width:80%;"></p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tebelorg/RPA-Python" target="_blank" rel="noreferrer">RPA-Python</a>：一个 Python 自动化操作的库。比如：自动打开网页并截图，示例代码：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t.init()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t.url(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.google.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t.type(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;q&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;decentralization[enter]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t.snap(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;page&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;results.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t.close()</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/178592227.gif" style="max-width:80%;"></p><h3 id="ruby-项目" tabindex="-1">Ruby 项目 <a class="header-anchor" href="#ruby-项目" aria-label="Permalink to &quot;Ruby 项目&quot;">​</a></h3><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/square/shift" target="_blank" rel="noreferrer">shift</a>：一个 Ruby 语言写的在线 MySQL 数据库迁移工具</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/49679370.png" style="max-width:80%;"></p><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/sindresorhus/Percentage" target="_blank" rel="noreferrer">Percentage</a>：让 Swift 语言支持百分比类型，消除精度缺失的烦恼。示例代码：</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Percent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; 15.5%</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; -5%</span></span></code></pre></div><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/modood/Administrative-divisions-of-China" target="_blank" rel="noreferrer">Administrative-divisions-of-China</a>：中国行政区划（五级）：省级、地级、县级、乡级和村级的数据集和爬虫程序</p><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/heibaiying/BigData-Notes" target="_blank" rel="noreferrer">BigData-Notes</a>：大数据入门教程，该教程介绍了大数据常用技术栈的基础和核心知识。内容涵盖：Hadoop、Spark、Storm、HBase、Hive、ZooKeeper、Kafka 等</p><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/microsoft/cascadia-code" target="_blank" rel="noreferrer">cascadia-code</a>：微软开源的一套等宽字体，有趣的是可以组合字符创建新的字形。组合效果如下：</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/196284711.gif" style="max-width:80%;"></p><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/curlconverter/curlconverter" target="_blank" rel="noreferrer">curlconverter</a>：把 curl 命令转化成各语言的代码的工具，支持 Python、JavaScript、PHP、R、Go 等语言。<a href="https://curl.trillworks.com/" target="_blank" rel="noreferrer">在线体验</a></p><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/mislav/hub" target="_blank" rel="noreferrer">hub</a>：通过命令行的方式来操作 GitHub，支持绝大多数的操作。比如：创建远程仓库、删除远程仓库、提交 PR、管理 issue 等，常用操作：</p><ul><li>创建远程仓库：hub create github-repository</li><li>删除远程仓库：hub delete github-repository</li><li>fork 项目：hub fork</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/401025.png" style="max-width:80%;"></p><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/vim-airline/vim-airline" target="_blank" rel="noreferrer">vim-airline</a>：一个让每个 Vim 窗口的底部，都有一个漂亮状态行的插件。展示信息和效果如下图：</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/11075527.gif" style="max-width:80%;"></p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/cosmicpython/book" target="_blank" rel="noreferrer">book</a>：（英文）《Cosmic Python》讲述如何管理复杂性的 Pythonic 应用程序结构的书籍</p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/heucoder/dimensionality_reduction_alo_codes" target="_blank" rel="noreferrer">dimensionality_reduction_alo_codes</a>：该项目使用 Python 实现了 11 种经典的数据抽取（数据降维）算法。同时附有相关资料、展示效果，适用于机器学习初学者和刚刚入坑数据挖掘的小伙伴</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/191011404.png" style="max-width:80%;"></p><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" target="_blank" rel="noreferrer">Ultra-Light-Fast-Generic-Face-Detector-1MB</a>：1MB 大小的轻量级人脸检测模型。该模型是针对边缘计算设备，基于 libfacedetection 替换压缩网络设计实现</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/43/214118425.jpg" style="max-width:80%;"></p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub42.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub44.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/43">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,92),h=[e];function l(p,r,k,o,g,c){return a(),i("div",null,h)}const u=s(n,[["render",l]]);export{E as __pageData,u as default};
