import{_ as i,c as a,a2 as t,o as n}from"./chunks/framework.Gf1jShja.js";const c=JSON.parse('{"title":"《HelloGitHub》第 26 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub26.md","filePath":"HelloGitHub26.md"}'),h={name:"HelloGitHub26.md"};function e(l,s,p,r,k,o){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="《hellogithub》第-26-期" tabindex="-1">《HelloGitHub》第 26 期 <a class="header-anchor" href="#《hellogithub》第-26-期" aria-label="Permalink to &quot;《HelloGitHub》第 26 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/26" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/icholy/ttygif" target="_blank" rel="noreferrer">ttygif</a>：录制终端.gif</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/12060725.gif" style="max-width:80%;"></p><h3 id="c-项目-1" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/zhongyang219/TrafficMonitor" target="_blank" rel="noreferrer">TrafficMonitor</a>：一款用于 Windows 平台的网速监控悬浮窗软件。可以显示当前网速、CPU及内存利用率、任务栏显示、更换皮肤、历史流量统计等功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/98771110.png" style="max-width:80%;"></p><h3 id="css-项目" tabindex="-1">CSS 项目 <a class="header-anchor" href="#css-项目" aria-label="Permalink to &quot;CSS 项目&quot;">​</a></h3><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/xiangsudian/CaoMei" target="_blank" rel="noreferrer">CaoMei</a>：一套免费、精致的开源图标库。</p><ul><li>精心绘制 丨 风格统一、力求像素级的显示</li><li>使用高效 丨 资源轻量、灵活、多设备兼容</li><li>开源免费 丨 个人私用和商用版权开源免费</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/93418722.png" style="max-width:80%;"></p><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/l-hammer/You-need-to-know-css" target="_blank" rel="noreferrer">You-need-to-know-css</a>：该项目包含了一些常用的 CSS 样式示例和作者阅读《CSS揭秘》的收获分享，适合于想要提高 CSS 技能的同学</p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dgryski/go-perfbook" target="_blank" rel="noreferrer">go-perfbook</a>：《关于 Go 性能优化的思考》概述了编写高性能 Go 代码的最佳实践。<a href="https://github.com/dgryski/go-perfbook/blob/master/performance-zh.md" target="_blank" rel="noreferrer">中文</a></p><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/aosen/gopool" target="_blank" rel="noreferrer">gopool</a>：Golang 分布式的连接池，协程池。内含 Redis Client 连接池实现，特点如下：</p><ul><li>提供下游的高可用访问，投票机制摘除下游不健康节点</li><li>最小健康比、最大冷却时长可配置</li><li>每个下游节点对应一个 channel，保证负载均衡</li><li>提供连接池状态监控接口包括总连接数、每个 IP 的连接数</li></ul><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/yunabe/lgo" target="_blank" rel="noreferrer">lgo</a>：实现像 python 一样的交互式编程，同时整合了 Jupyter Notebook。效果如下：</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/105907218.gif" style="max-width:80%;"></p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/BolexLiu/AutoEx" target="_blank" rel="noreferrer">AutoEx</a>：帮助 Android 开发者，让项目在崩溃时从异常堆栈中，自动寻找 Stack Overflow 的回答。体积只有 9kb 并且没有依赖其他第三方库。当程序出现异常时会有如下输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌—————————————————————AutoEx——————————————————————</span></span>
<span class="line"><span>├ 错误类型:android.content.res.Resources$NotFoundException: Resource ID #0x7f0b0056 type #0x12 is not valid。↑详细异常请往上滚动查看↑</span></span>
<span class="line"><span>├ 推荐参考Stack Overflow上4条同类问题。↓点击下方连接查看↓</span></span>
<span class="line"><span>├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄</span></span>
<span class="line"><span>├ 标题:Android Resources$NotFoundException: Resource ID #0x7f030027</span></span>
<span class="line"><span>├ 链接:https://stackoverflow.com/questions/21269502/android-resourcesnotfoundexception-resource-id-0x7f030027</span></span>
<span class="line"><span>├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄</span></span>
<span class="line"><span>├ 标题:android.content.res.Resources$NotFoundException: Resource ID #0x7f07007e</span></span>
<span class="line"><span>├ 链接:https://stackoverflow.com/questions/48161713/android-content-res-resourcesnotfoundexception-resource-id-0x7f07007e</span></span>
<span class="line"><span>├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄</span></span>
<span class="line"><span>├ 标题:App crashes when adding an ImageView?</span></span>
<span class="line"><span>├ 链接:https://stackoverflow.com/questions/47600747/app-crashes-when-adding-an-imageview</span></span>
<span class="line"><span>├┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄</span></span>
<span class="line"><span>├ 标题:XML Android app will not load on phone</span></span>
<span class="line"><span>├ 链接:https://stackoverflow.com/questions/48310838/xml-android-app-will-not-load-on-phone</span></span>
<span class="line"><span>└—————————————————————AutoEx——————————————————————</span></span></code></pre></div><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/javatuples/javatuples" target="_blank" rel="noreferrer">javatuples</a>：提供了多个方便易用的 Java 元组类。写 Java 代码经常会有需要使用元组的场景，我们经常会用 Array 或者 List 来代替这种实现。但是这不仅不够优雅，并且不够安全（你要放弃泛型来达到可以存放不同类型的数据）。而 javatuples 提供了多个类型安全的、优雅的实现类，大大提升了我们开发的效率以及便捷性。示例代码：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Integer integ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] doubleArray </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// create a tuple</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Triplet&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt; triplet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Triplet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str, integ, doubleArray); </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// fetch data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String myStr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> triplet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getValue0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Integer myInteg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> triplet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getValue1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] myDoubleArray </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> triplet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getValue2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/alibaba/BizCharts" target="_blank" rel="noreferrer">BizCharts</a>：蚂蚁出品的基于 React 的图表库。图表样式丰富、使用方便、易扩展、文档齐全，<a href="https://antv.alipay.com/zh-cn/g2/3.x/index.html" target="_blank" rel="noreferrer">官网</a></p><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/carbon-app/carbon" target="_blank" rel="noreferrer">carbon</a>：以美观、整洁的方式，展示你的代码片段。同时提供 SVG、PNG 多种方式展示</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/94498635.png" style="max-width:80%;"></p><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/iamkun/dayjs" target="_blank" rel="noreferrer">dayjs</a>：一个轻量的 JavaScript 时间日期处理库。保持和 Moment.js 的 API 设计完全一样。如果你曾经用过 Moment.js，那么你已经知道如何使用 Day.js 了。体积仅有 2kb 是 Moment.js 的轻量化方案，示例代码如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dayjs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;month&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;day&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;year&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY-MM-DD HH:mm:ss&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/trekhleb/javascript-algorithms" target="_blank" rel="noreferrer">javascript-algorithms</a>：包含了多种基于 JavaScript 的算法与数据结构，<a href="https://github.com/trekhleb/javascript-algorithms/blob/master/README.zh-CN.md" target="_blank" rel="noreferrer">中文</a></p><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nhn/tui.calendar" target="_blank" rel="noreferrer">tui.calendar</a>：功能全面的 JavaScript 日程安排日历。虽然项目依赖了 jQuery，但是对于真实项目来说这样做是可以的。此项目适用于多种场景，炫酷的交互和 UI</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/103071620.gif" style="max-width:80%;"></p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/marshmallow-code/marshmallow" target="_blank" rel="noreferrer">marshmallow</a>：使用类似于 ORM 的语法，序列化、反序列化 Python 对象。可以将序列化的对象呈现为标准格式，适用于例如数据校验、返回 HTTP API 的 JSON。示例代码如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> marshmallow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Schema, fields, pprint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ArtistSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fields.Str()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AlbumSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fields.Str()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    release_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fields.Date()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    artist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fields.Nested(ArtistSchema())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bowie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;David Bowie&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">album </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">artist</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bowie, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hunky Dory&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">release_date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1971</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schema </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AlbumSchema()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> schema.dump(album)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pprint(result, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">indent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出如下</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># { &#39;artist&#39;: {&#39;name&#39;: &#39;David Bowie&#39;},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   &#39;release_date&#39;: &#39;1971-12-17&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   &#39;title&#39;: &#39;Hunky Dory&#39;}</span></span></code></pre></div><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/facebookarchive/redis-faina" target="_blank" rel="noreferrer">redis-faina</a>：Redis 性能分析器。提供两种模式分析模式：命令实时、读取日志。其原理是使用 Redis MONITOR 命令，将该命令的结果通过管道传递给 redis-faina 脚本，脚本将返回的信息解析，并汇成总成统计信息。具体信息如下所示：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">注意：分析非常闲的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 实例时，分析的结果可能偏差的很多。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">时间单位为微秒：ms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ×</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10^-6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Overall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Stats</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">========================================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 总命令数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Lines</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Processed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	10</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># QPS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Commands/Sec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     	1.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 出现最多的 key 的前缀</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Top</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Prefixes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                           </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">========================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startchart</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	(90.00%)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求最多的key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Top</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">========================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startchart:521xueweihan/hellogithub</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	(90.00%)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求最多的命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Top</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Commands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">========================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	(90.00%)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请求响应时间的分布</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microsecs)       </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">========================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Median</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	583914.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">75%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     	637395.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">90%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     	5703923.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">99%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     	5703923.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 总耗时最多的命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Heaviest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Commands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (microsecs)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">========================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	9746157.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 慢请求列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Slowest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Calls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                             </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">========================================</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">5703923.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">637395.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">633909.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">583914.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">569207.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">548745.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">545493.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">523571.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   	&quot;get&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;startchart:521xueweihan/hellogithub&quot;</span></span></code></pre></div><h3 id="rust-项目" tabindex="-1">Rust 项目 <a class="header-anchor" href="#rust-项目" aria-label="Permalink to &quot;Rust 项目&quot;">​</a></h3><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/sharkdp/fd" target="_blank" rel="noreferrer">fd</a>：一个简单、快速、友好的替代 find 命令的方案</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/90793418.gif" style="max-width:80%;"></p><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/rayon-rs/rayon" target="_blank" rel="noreferrer">rayon</a>：一个易用、无数据竞争的将顺序迭代器转化成并行迭代器。简单说就是原本你的数组只能一个一个地遍历，使用这个库可以并发同时从几个 index 开始遍历，同时也能遍历 map 等类似的数据结构</p><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/CocoaDebug/CocoaDebug" target="_blank" rel="noreferrer">CocoaDebug</a>：iOS APP 内置调试工具，支持 log 日志查看、网络抓包、沙盒查看等功能，代码零入侵。示例代码：</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//Step 1.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DEBUG</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CocoaDebug</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//Step 2.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DEBUG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    CocoaDebug.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//Step 3.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message: T, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: UIColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .white) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    #</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DEBUG</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        swiftLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file, function, line, message, color)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    #</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endif</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/117513852.gif" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jasonslyvia/a-cartoon-intro-to-redux-cn" target="_blank" rel="noreferrer">a-cartoon-intro-to-redux-cn</a>：《看漫画学 Redux》</p><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/xingshaocheng/architect-awesome" target="_blank" rel="noreferrer">architect-awesome</a>：《后端架构师技术图谱》</p><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/davideuler/architecture.of.internet-product" target="_blank" rel="noreferrer">architecture.of.internet-product</a>：知名互联网公司的架构文档</p><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/EZLippi/practical-programming-books" target="_blank" rel="noreferrer">practical-programming-books</a>：实用的计算机相关技术书籍、入门的实用教程、技术网站、博文集合</p><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/public-apis/public-apis" target="_blank" rel="noreferrer">public-apis</a>：（英文）用于 Web 开发的公共 API 集合</p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/wizardforcel/sicp-py-zh" target="_blank" rel="noreferrer">sicp-py-zh</a>：《SICP Python 描述中文版》<a href="https://wizardforcel.gitbooks.io/sicp-py/content/" target="_blank" rel="noreferrer">在线阅读</a></p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/junxiaosong/AlphaZero_Gomoku" target="_blank" rel="noreferrer">AlphaZero_Gomoku</a>：使用 TensorFlow/Pytorch/Theano 实现 AlphaZero 算法，通过自我对弈从零训练五子棋 AI。实现简单、清晰，适合学习、了解 AlphaGo Zero 背后的关键思想和技术细节</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/26/114990078.gif" style="max-width:80%;"></p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub25.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub27.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/26">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,72)]))}const d=i(h,[["render",e]]);export{c as __pageData,d as default};
