import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const d=JSON.parse('{"title":"《HelloGitHub》第 54 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub54.md","filePath":"HelloGitHub54.md"}'),n={name:"HelloGitHub54.md"},h=t(`<h1 id="《hellogithub》第-54-期" tabindex="-1">《HelloGitHub》第 54 期 <a class="header-anchor" href="#《hellogithub》第-54-期" aria-label="Permalink to &quot;《HelloGitHub》第 54 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/54" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/libevent/libevent" target="_blank" rel="noreferrer">libevent</a>：C 语言实现的轻量级、高性能事件通知库。基于事件驱动，支持多种 I/O 多路复用技术：epoll、poll、select、kqueue 等。libevent 就是这些系统基础库的统一封装，提供更高级的 API 并解决跨平台的问题</p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dotnet/dotnet-docker" target="_blank" rel="noreferrer">dotnet-docker</a>：.NET Core 和 Tools 的 Docker 镜像</p><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dotnet/machinelearning" target="_blank" rel="noreferrer">machinelearning</a>：微软开源的 C# 机器学习框架。支持的机器学习类任务：分类、回归、聚类等，<a href="https://dotnet.microsoft.com/learn/ml-dotnet" target="_blank" rel="noreferrer">教程和视频</a>。示例代码：</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var dataPath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sentiment.csv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var mlContext </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MLContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var loader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mlContext.Data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CreateTextLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        new TextLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SentimentText&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DataKind.String, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        new TextLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DataKind.Boolean, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hasHeader: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    separatorChar: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;,&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dataPath);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var learningPipeline </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mlContext.Transforms.Text.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FeaturizeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Features&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SentimentText&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mlContext.BinaryClassification.Trainers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FastTree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> learningPipeline.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var predictionEngine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mlContext.Model.CreatePredictionEngine</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SentimentData, SentimentPrediction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var prediction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> predictionEngine.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Predict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(new SentimentData</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    SentimentText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Today is a great day!&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prediction: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prediction.Prediction);</span></span></code></pre></div><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/drogonframework/drogon" target="_blank" rel="noreferrer">drogon</a>：一款 C++ 的异步非阻塞高性能 Web 框架。功能强大、上手容易，使得用 C++ 语言构建各种类型的高性能 Web 应用，变得更加方便。示例代码：</p><div class="language-C++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;drogon/drogon.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> drogon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLogPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLogLevel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trantor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::kWarn)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setThreadNum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enableRunAsDaemon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/131236938.png" style="max-width:80%;"></p><h3 id="css-项目" tabindex="-1">CSS 项目 <a class="header-anchor" href="#css-项目" aria-label="Permalink to &quot;CSS 项目&quot;">​</a></h3><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/flukeout/css-diner" target="_blank" rel="noreferrer">css-diner</a>：通过游戏方式在线学习 CSS 选择器知识。初学者可以通过简单的动画界面，学习 CSS 多种选择器语法是如何筛选出页面的元素，虽然是英文网站但还算通俗易懂。<a href="https://flukeout.github.io/" target="_blank" rel="noreferrer">在线尝试</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/16636908.png" style="max-width:80%;"></p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/go-admin-team/go-admin" target="_blank" rel="noreferrer">go-admin</a>：基于 Gin+Vue+Element UI 的前后端分离权限管理系统。文档齐全、还有视频教程适合新手学习，特点：</p><ul><li>遵循 RESTful API 设计规范</li><li>基于 Gin Web API 框架，提供了丰富的中间件支持（用户认证、跨域、访问日志、追踪 ID 等）</li><li>支持 Swagger 文档</li><li>等等</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/247032621.png" style="max-width:80%;"></p><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/micro/go-micro" target="_blank" rel="noreferrer">go-micro</a>：一款 Go 插件化的基础框架。我只知道它是个 Go 微服务框架，基于它可以快速构建微服务。示例代码如图所示：</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/29217054.png" style="max-width:80%;"></p><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jinzhu/now" target="_blank" rel="noreferrer">now</a>：Go 语言的时间工具库。项目简单、代码易懂，示例代码丰富：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/jinzhu/now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 17:51:49.123456789 Mon</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfMinute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 17:51:00 Mon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfHour</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 17:00:00 Mon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfDay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 00:00:00 Mon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfWeek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-17 00:00:00 Sun</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-01 00:00:00 Fri</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfQuarter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-10-01 00:00:00 Tue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfYear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-01-01 00:00:00 Tue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.WeekStartDay </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.Monday </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Set Monday as first day, default is Sunday</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BeginningOfWeek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 00:00:00 Mon</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfMinute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 17:51:59.999999999 Mon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfHour</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 17:59:59.999999999 Mon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfDay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-18 23:59:59.999999999 Mon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfWeek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-23 23:59:59.999999999 Sat</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfMonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-30 23:59:59.999999999 Sat</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfQuarter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-12-31 23:59:59.999999999 Tue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfYear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-12-31 23:59:59.999999999 Tue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.WeekStartDay </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time.Monday </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Set Monday as first day, default is Sunday</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EndOfWeek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2013-11-24 23:59:59.999999999 Sun</span></span></code></pre></div><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/sosedoff/pgweb" target="_blank" rel="noreferrer">pgweb</a>：基于 Go 实现的跨平台 PostgreSQL 数据库管理工具。通过本地起服务+浏览器的方式解决了跨平台的问题，启动命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>三种方式：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>参数：pgweb --host localhost --user myuser --db mydb</span></span>
<span class="line"><span>URL：pgweb --url postgres://user:password@host:port/database?sslmode=[mode]</span></span>
<span class="line"><span>Socket：pgweb --url &quot;postgres:///database?host=/absolute/path/to/unix/socket/dir&quot;</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/24968828.png" style="max-width:80%;"></p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/roncoo/roncoo-pay" target="_blank" rel="noreferrer">roncoo-pay</a>：开源的 Java 互联网业务支付系统。拥有独立的账户体系、用户体系、支付接入体系、支付交易体系、对账清结算体系等，想学习支付相关技术的同学可以看看这个项目。项目结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>roncoo-pay</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-app-notify //商户通知模块</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-app-order-polling //订单轮询模块</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-app-reconciliation //交易对账模块</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-app-settlement //交易结算模块</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-common-core //公共基础模块，不需要单独部署</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-service //核心业务模块，不需要单独部署</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-web-boss //运营后台模块</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-web-gateway //支付网关模块</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-web-merchant //商户后台模块</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>├── roncoo-pay-web-sample-shop //模拟商城模块</span></span></code></pre></div><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/pingfangushi/screw" target="_blank" rel="noreferrer">screw</a>：简单好用的数据库表结构文档生成工具</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/273891882.png" style="max-width:80%;"></p><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/bytedance/IconPark" target="_blank" rel="noreferrer">IconPark</a>：该开源库提供了 1200+ 高质量图标，还有一个界面便于定制图标。强大之处是可以通过改变一个 SVG 文件的属性来变换出多种主题，支持导出 SVG、PNG、Vue 和 React 图标组件等。极大的方便了设计师和开发者，让他们有更多时间逛 HG 了</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/282828123.png" style="max-width:80%;"></p><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/SSShooter/mind-elixir-core" target="_blank" rel="noreferrer">mind-elixir-core</a>：一款免费开源的思维导图 JS 库。<a href="https://mindelixir.ink/#/" target="_blank" rel="noreferrer">在线尝试</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/199951138.jpg" style="max-width:80%;"></p><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/alibaba-fusion/next" target="_blank" rel="noreferrer">next</a>：一套企业级中后台 UI 解决方案，致力于解决设计师与前端在工作协同、产品体验一致性、开发效率方面的问题。就是设计师修改颜色之类的，可以生成一个 NPM 主题包，前端拿到这个包就可以直接还原设计师的设计</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/138132664.png" style="max-width:80%;"></p><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/naptha/tesseract.js" target="_blank" rel="noreferrer">tesseract.js</a>：支持多种语言的文字识别的 JS 库，能够方便、准确的把图片中的文字解析提取出来（就能复制了）。基于 Tesseract OCR 引擎实现的 JS 版本，方便前端实现文字识别功能和在浏览器中直接使用。<a href="https://tesseract.projectnaptha.com/" target="_blank" rel="noreferrer">在线尝试</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/37958358.png" style="max-width:80%;"></p><h3 id="kotlin-项目" tabindex="-1">Kotlin 项目 <a class="header-anchor" href="#kotlin-项目" aria-label="Permalink to &quot;Kotlin 项目&quot;">​</a></h3><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/loper7/DateTimePicker" target="_blank" rel="noreferrer">DateTimePicker</a>：一个简约、漂亮的日期时间选择器。支持 100% 自定义 UI，内置日期时间选择弹窗基于 Google BottomSheetDialog</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/245125241.png" style="max-width:80%;"></p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/moranzcw/Computer-Networking-A-Top-Down-Approach-NOTES" target="_blank" rel="noreferrer">Computer-Networking-A-Top-Down-Approach-NOTES</a>：《计算机网络－自顶向下方法》编程作业。包含问题和 Python 代码解答，Wireshark 实验部分为官方文档的翻译</p><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jerry-git/learn-python3" target="_blank" rel="noreferrer">learn-python3</a>：一份 Python3 的教程，请查收。该教程采用 Jupyter notebooks 形式，便于运行和阅读。并且还包含了练习题，对新手友好。缺点的话就是英文的教程，但是我都能看懂你肯定也可以</p><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/parzulpan/livebox" target="_blank" rel="noreferrer">livebox</a>：一个网络直播聚合平台，能够观看视频直播、高清电视和收听广播电台等。目前支持 30+ 个视频直播、50+ 个高清电视频道和 70+ 个广播电台，比较全面的 Web 项目，用到的技术栈：</p><ul><li>前端/客户端：Qt、Vue、Flutter 等</li><li>后端：MySQL、Redis、Kafka/RabbitMQ、Elasticsearch 等</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/272427828.png" style="max-width:80%;"></p><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/readthedocs/readthedocs.org" target="_blank" rel="noreferrer">readthedocs.org</a>：知名文档社区网站（readthedocs.org）的开源源码。该网站上托管了：Scrapy、requests、bootstrap-datepicker 等知名库的文档，我看了下项目是基于 Django 开发的，文件有些多看起来需要点耐心</p><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/taichi-dev/taichi" target="_blank" rel="noreferrer">taichi</a>：一个高性能图形学编程框架。它可以将你编写的 Python 代码转换成高效的汇编代码，在多 CPU 和 GPU 上运行，相当于是在用 Python 的语法写着色器。Taichi 解决了图形学配环境难，代码移植性差等问题，只需 <code>pip install taichi</code> 即可安装，编写的程序在 Windows、Linux、OSX 上均可运行，降低了新手学习图形学的门槛。示例代码：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> taichi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ti</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ti.init(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ti.gpu)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定编译后的函数在 GPU 上执行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 320</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pixels </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ti.field(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">shape</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提前声明数组存储类型，大小</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@ti.func</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 该函数将是被调用的过程函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> complex_sqr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ti.Vector([z[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@ti.kernel</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 该函数将被 Taichi 编译</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> paint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i, j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pixels:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最外层循环会自动并行化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ti.Vector([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ti.cos(t) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ti.Vector([i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        iterations </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z.norm() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iterations </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他语法和原生 Python 基本一致</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> complex_sqr(z) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            iterations </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pixels[i, j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iterations </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.02</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gui </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ti.GUI(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Julia Set&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    paint(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gui.set_image(pixels)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gui.show()</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/74660642.gif" style="max-width:80%;"></p><h3 id="rust-项目" tabindex="-1">Rust 项目 <a class="header-anchor" href="#rust-项目" aria-label="Permalink to &quot;Rust 项目&quot;">​</a></h3><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/rust-lang/rustlings" target="_blank" rel="noreferrer">rustlings</a>：该项目通过一个个简单练习小 demo，让初学者学习 Rust 的语法。通过简单的命令即可安装本项目，然后修改每个小练习，达到编译通过或者目标输出，通过后会进入下一关，有种闯关的成就感。运行方法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>安装：</span></span>
<span class="line"><span>git clone https://github.com/rust-lang/rustlings</span></span>
<span class="line"><span>cd rustlings</span></span>
<span class="line"><span>git checkout tags/4.0.0 # or whatever the latest version is (find out at https://github.com/rust-lang/rustlings/releases/latest)</span></span>
<span class="line"><span>cargo install --force --path .</span></span>
<span class="line"><span></span></span>
<span class="line"><span>安装完后，运行：</span></span>
<span class="line"><span>rustlings watch</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/42489829.png" style="max-width:80%;"></p><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/longitachi/ZLPhotoBrowser" target="_blank" rel="noreferrer">ZLPhotoBrowser</a>：轻量级照片选择框架。它使用简单、功能丰富，支持预览/相册内拍照及录视频、拖拽/滑动选择、编辑裁剪图片/视频等功能。示例代码：</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用起来非常简单</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ac </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ZLPhotoPreviewSheet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ac.selectImageBlock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">weak</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] (images, assets, isOriginal) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // your code</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 快速选择方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ac.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">showPreview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进入相册选择方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ac.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">showPhotoLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/47162528.png" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/halfrost/Halfrost-Field" target="_blank" rel="noreferrer">Halfrost-Field</a>：前阿里巴巴资深后端工程师“霜神”的技术博客，分享前、后端的技术干货。作者日常工作语言是 Go，在进入阿里巴巴之前，做了几年前端工作。文章内容包含：机器学习、Go、JS、iOS、网络协议等系列</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/86981606.png" style="max-width:80%;"></p><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noreferrer">hexo-theme-matery</a>：一款采用 Material Design 和响应式设计的 Hexo 博客主题。特点：</p><ul><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 Banner 图片</li><li>时间轴式的归档页</li><li>词云的标签页和雷达图的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>支持文章置顶和文章打赏</li><li>等等</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/146325535.png" style="max-width:80%;"></p><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/highlightjs/highlight.js" target="_blank" rel="noreferrer">highlight.js</a>：让网页上的代码实现高亮的 JS 库，给代码点颜色瞧瞧。支持多种编程语言和样式，使用简单。示例代码：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stylesheet&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/styles/default.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/highlight.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;hljs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initHighlightingOnLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/1213225.png" style="max-width:80%;"></p><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/peng-zhihui/L-ink_Card" target="_blank" rel="noreferrer">L-ink_Card</a>：该项目包含了制作一个迷你 NFC 智能卡的代码和教程。野生钢铁侠稚晖出品的<a href="https://www.bilibili.com/video/BV1Cf4y1y7KT/" target="_blank" rel="noreferrer">演示视频</a>，他还制作了很多别的有趣的东西，大家可以去看看很有意思</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/273689548.jpg" style="max-width:80%;"></p><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/rxi/lite" target="_blank" rel="noreferrer">lite</a>：一款用 Lua 编写的超级轻量级的文本编辑器。在 Windows 下的 exe 文件虽然只有 300KB 左右，但颜值、功能和速度却一点都不差，甚至还支持使用自定义插件、配色主题等功能。小而美的文本编辑器</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/230599151.png" style="max-width:80%;"></p><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ntfstool/ntfstool" target="_blank" rel="noreferrer">ntfstool</a>：一款为苹果电脑提供 NTFS 读写支持的免费工具。有了它就可以很方便的在苹果电脑上读写，从 Windows 系统拷贝数据的 U 盘和移动硬盘等。<a href="https://github.com/ntfstool/ntfstool/blob/master/README-CN.md" target="_blank" rel="noreferrer">安装说明</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/242364937.jpeg" style="max-width:80%;"></p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/doodlewind/jshistory-cn" target="_blank" rel="noreferrer">jshistory-cn</a>：《JavaScript 20 年》中文版。<a href="https://cn.history.js.org/" target="_blank" rel="noreferrer">在线阅读</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/255242703.png" style="max-width:80%;"></p><p>31、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/KaiserY/trpl-zh-cn" target="_blank" rel="noreferrer">trpl-zh-cn</a>：《Rust 程序设计语言（第二版）》中文翻译。<a href="https://kaisery.github.io/trpl-zh-cn/" target="_blank" rel="noreferrer">在线阅读</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/80980931.png" style="max-width:80%;"></p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>32、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/microsoft/computervision-recipes" target="_blank" rel="noreferrer">computervision-recipes</a>：计算机视觉系统最佳实践，包含各种 CV 示例项目。示例使用 PytTorch 深度学习库+ Jupyter 文件，涵盖：图像分类、相似、识别、追踪等方面，适合对图像方面感兴趣的小伙伴阅读和学习</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/170161374.jpg" style="max-width:80%;"></p><p>33、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nsfw-filter/nsfw-filter" target="_blank" rel="noreferrer">nsfw-filter</a>：基于 tensefow.js 实现的过滤 NSFW（裸露、暴力等）图片的浏览器插件</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/278011746.gif" style="max-width:80%;"></p><p>34、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/wb14123/seq2seq-couplet" target="_blank" rel="noreferrer">seq2seq-couplet</a>：基于深度学习的对对联项目，你出上联它自动生成下联。我尝试了下，对得三观很正，还挺有意思。<a href="https://ai.binwang.me/couplet/" target="_blank" rel="noreferrer">在线尝试</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/54/122696125.png" style="max-width:80%;"></p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub53.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub55.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/54">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,103),e=[h];function l(p,k,r,g,o,E){return a(),i("div",null,e)}const y=s(n,[["render",l]]);export{d as __pageData,y as default};
