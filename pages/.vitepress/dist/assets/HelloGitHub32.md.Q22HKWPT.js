import{_ as s,c as a,o as t,a4 as e}from"./chunks/framework.DpC1ZpOZ.js";const u=JSON.parse('{"title":"《HelloGitHub》第 32 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub32.md","filePath":"HelloGitHub32.md"}'),i={name:"HelloGitHub32.md"},n=e(`<h1 id="《hellogithub》第-32-期" tabindex="-1">《HelloGitHub》第 32 期 <a class="header-anchor" href="#《hellogithub》第-32-期" aria-label="Permalink to &quot;《HelloGitHub》第 32 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/32" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Syllo/nvtop" target="_blank" rel="noreferrer">nvtop</a>：NVIDIA GPU 类 (h)top 的任务监控工具，它可以监控多个 GPU 并以熟悉的方式（类 htop 方式）打印有关它们的信息</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/94530674.png" style="max-width:80%;"></p><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/cfenollosa/os-tutorial" target="_blank" rel="noreferrer">os-tutorial</a>：（英文）如何从头开始创建操作系统</p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/QL-Win/QuickLook" target="_blank" rel="noreferrer">QuickLook</a>：它允许 Windows 用户只需按空格键即可以快速地查看文件内容（类 macOS 的 Quick Look）</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/88064357.gif" style="max-width:80%;"></p><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/oatpp/oatpp" target="_blank" rel="noreferrer">oatpp</a>：轻量、高性能、零依赖，纯 C++ 实现的 Web 框架。示例代码片段：</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo/api/json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, getJson) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dto </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyDto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createShared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dto-&gt;statusCode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dto-&gt;message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createDtoResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::CODE_200, dto);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Output:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;statusCode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/mholt/archiver" target="_blank" rel="noreferrer">archiver</a>：命令行压缩和解压缩工具。终于不用再记 <code>tar -czvf</code> 了，使用命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Syntax: arc archive [archive name] [input files...] 压缩</span></span>
<span class="line"><span></span></span>
<span class="line"><span>$ arc archive test.tar.gz file1.txt images/file2.jpg folder/subfolder</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Syntax: arc unarchive [archive name] [destination] 解压缩</span></span>
<span class="line"><span></span></span>
<span class="line"><span>$ arc unarchive test.tar.gz</span></span></code></pre></div><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/gomods/athens" target="_blank" rel="noreferrer">athens</a>：Go Modules 下载代理服务，解决国内 Go 装包的痛。妈妈再也不用担心我因为装不上依赖库而不吃饭，使用步骤：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ export GO111MODULE=on</span></span>
<span class="line"><span>$ export GOPROXY=http://127.0.0.1:3000</span></span>
<span class="line"><span>$ git clone https://github.com/athens-artifacts/walkthrough.git</span></span>
<span class="line"><span>$ cd walkthrough</span></span>
<span class="line"><span>$ go run .</span></span>
<span class="line"><span>go: downloading github.com/athens-artifacts/samplelib v1.0.0</span></span>
<span class="line"><span>The 🦁 says rawr!</span></span></code></pre></div><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/wagoodman/dive" target="_blank" rel="noreferrer">dive</a>：用来探索 docker 镜像每一层文件系统，以及发现缩小镜像体积方法的命令行工具。启动命令：<code>dive 镜像名</code></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/133251103.gif" style="max-width:80%;"></p><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/40t/go-sniffer" target="_blank" rel="noreferrer">go-sniffer</a>：该工具通过抓包截取项目中的数据库、redis 请求解析成相应的语句。便于调试，不要修改代码，直接嗅探项目中的数据请求。使用说明如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=======================================================================</span></span>
<span class="line"><span>[使用说明]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    go-sniffer [设备名] [插件名] [插件参数(可选)]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    [例子]</span></span>
<span class="line"><span>          go-sniffer en0 redis          抓取redis数据包</span></span>
<span class="line"><span>          go-sniffer en0 mysql -p 3306  抓取mysql数据包,端口3306</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    go-sniffer --[命令]</span></span>
<span class="line"><span>               --help 帮助信息</span></span>
<span class="line"><span>               --env  环境变量</span></span>
<span class="line"><span>               --list 插件列表</span></span>
<span class="line"><span>               --ver  版本信息</span></span>
<span class="line"><span>               --dev  设备列表</span></span>
<span class="line"><span>    [例子]</span></span>
<span class="line"><span>          go-sniffer --list 查看可抓取的协议</span></span>
<span class="line"><span></span></span>
<span class="line"><span>=======================================================================</span></span>
<span class="line"><span>[设备名] : lo0 :   127.0.0.1</span></span>
<span class="line"><span>[设备名] : en0 : x:x:x:x:x5:x  192.168.1.3</span></span>
<span class="line"><span>[设备名] : utun2 :   1.1.11.1</span></span>
<span class="line"><span>=======================================================================</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/150212148.gif" style="max-width:80%;"></p><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/XiaoMi/soar" target="_blank" rel="noreferrer">soar</a>：SQL 自动优化和改写的工具。可以自动优化 MySQL 语法族，并且给出为什么要这样优化的理由。功能特点：</p><ul><li>跨平台支持</li><li>目前只支持 MySQL 语法族协议的 SQL 优化</li><li>支持基于启发式算法的语句优化</li><li>支持复杂查询的多列索引优化（UPDATE、INSERT、DELETE、SELECT）</li><li>等等</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>echo &quot;select title from sakila.film&quot; | ./soar </span></span>
<span class="line"><span># Query: 25807E6B94BEA72C</span></span>
<span class="line"><span>★ ★ ★ ★ ☆ 80分</span></span>
<span class="line"><span>SELECT</span></span>
<span class="line"><span>  title</span></span>
<span class="line"><span>FROM</span></span>
<span class="line"><span>  sakila. film</span></span>
<span class="line"><span>##  最外层SELECT未指定WHERE条件</span></span>
<span class="line"><span>* **Item:**  CLA.001</span></span>
<span class="line"><span>* **Severity:**  L4</span></span>
<span class="line"><span>* **Content:**  SELECT语句没有WHERE子句，可能检查比预期更多的行(全表扫描)。对于SELECT COUNT(\\*)类型的请求如果不要求精度，建议使用SHOW TABLE STATUS或EXPLAIN替代。</span></span></code></pre></div><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/joewalnes/websocketd" target="_blank" rel="noreferrer">websocketd</a>：把命令行的输出 stdout 和 stderr 重定向为一个 websocket 服务的工具。运行步骤如下：</p><ol><li>安装命令：<code>brew install websocketd</code></li><li>创建 count.sh 内容如下</li><li>运行 count.sh，命令：<code>./count.sh</code></li><li>启动一个 websocket server，命令：<code>websocketd --port=8080 ./count.sh</code></li><li>创建 html 文件，代码如下</li><li>点击打开 count.html 文件，查看效果</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>count.sh 文件内容如下</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span>for ((COUNT = 1; COUNT &lt;= 3; COUNT++)); do</span></span>
<span class="line"><span>  echo $COUNT</span></span>
<span class="line"><span>  sleep 1</span></span>
<span class="line"><span>done</span></span>
<span class="line"><span></span></span>
<span class="line"><span>count.html 文件内容如下</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span>&lt;pre id=&quot;log&quot;&gt;&lt;/pre&gt;</span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>  // helper function: log message to screen</span></span>
<span class="line"><span>  function log(msg) {</span></span>
<span class="line"><span>    document.getElementById(&#39;log&#39;).textContent += msg + &#39;\\n&#39;;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  // setup websocket with callbacks</span></span>
<span class="line"><span>  var ws = new WebSocket(&#39;ws://localhost:8080/&#39;);</span></span>
<span class="line"><span>  ws.onopen = function() {</span></span>
<span class="line"><span>    log(&#39;CONNECT&#39;);</span></span>
<span class="line"><span>  };</span></span>
<span class="line"><span>  ws.onclose = function() {</span></span>
<span class="line"><span>    log(&#39;DISCONNECT&#39;);</span></span>
<span class="line"><span>  };</span></span>
<span class="line"><span>  ws.onmessage = function(event) {</span></span>
<span class="line"><span>    log(&#39;MESSAGE: &#39; + event.data);</span></span>
<span class="line"><span>  };</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre></div><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ainilili/ratel" target="_blank" rel="noreferrer">ratel</a>：命令行可联网的斗地主游戏。Ratel 分客户端和服务端，你可以让小伙伴们的客户端都连接你的服务器进行游戏，也可以直接连接作者的公网服务器进行游戏</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/153278268.gif" style="max-width:80%;"></p><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/simplepeng/SpiderMan" target="_blank" rel="noreferrer">SpiderMan</a>：手机端显示 Android 崩溃日志，示例代码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SpiderMan.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置回调异常信息，友盟等第三方崩溃信息收集平台会用到,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOnCrashListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpiderMan.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OnCrashListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      * @param t</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      * @param ex</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      * @param model 崩溃信息记录，包含设备信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onCrash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Thread t, Throwable ex, CrashModel model) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/130441517.gif" style="max-width:80%;"></p><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/hexojs/hexo" target="_blank" rel="noreferrer">hexo</a>：基于 Node.js 快速、简洁且高效的静态博客生成框架。可以使用 hexo 快速生成静态博客，它拥有丰富的<a href="https://hexo.io/plugins/" target="_blank" rel="noreferrer">插件库</a>、<a href="https://hexo.io/themes/" target="_blank" rel="noreferrer">主题库</a>。在使用 hexo 的时候也可以自己创建、定制属于自己的主题</p><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nenadmarkus/picojs" target="_blank" rel="noreferrer">picojs</a>：200 行实现的面部识别库，<a href="https://tkv.io/posts/picojs-intro/demo/" target="_blank" rel="noreferrer">在线示例</a></p><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/storybookjs/storybook" target="_blank" rel="noreferrer">storybook</a>：UI 组件开发测试的环境。你可以使用 React、React Native、Vue、Angular、Ember 开发你的组件，并且可以使用 storybook 提供的众多插件进行测试以及开发。<a href="https://storybook.js.org/examples/" target="_blank" rel="noreferrer">在线示例</a></p><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/mrdoob/three.js" target="_blank" rel="noreferrer">three.js</a>：一个知名的 JavaScript 3D 库。随着数据可视化以及 Web AR 的流行，会越来越多使用到 three.js ，尤其是和 Vue/React 前端框架结合使用。官方网站包含丰富的<a href="https://threejs.org/examples/" target="_blank" rel="noreferrer">示例</a>和全面的<a href="https://threejs.org/docs/" target="_blank" rel="noreferrer">中文文档</a>，赶快去写几个 demo 熟悉下该库吧</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/576201.png" style="max-width:80%;"></p><h3 id="objective-c-项目" tabindex="-1">Objective-C 项目 <a class="header-anchor" href="#objective-c-项目" aria-label="Permalink to &quot;Objective-C 项目&quot;">​</a></h3><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/MacPass/MacPass" target="_blank" rel="noreferrer">MacPass</a>：一款 macOS 平台的免费、开源、实用的密码管理工具</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/5129986.png" style="max-width:80%;"></p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/boramalper/himawaripy" target="_blank" rel="noreferrer">himawaripy</a>：一个 Python3 脚本，它会定时（需设置定时任务）抓取由日本 Himawari 8 气象卫星拍摄的接近实时的地球照片，并将它设置成你的桌面背景</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/51078774.gif" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/sdmg15/Best-websites-a-programmer-should-visit" target="_blank" rel="noreferrer">Best-websites-a-programmer-should-visit</a>：程序员应该放到收藏夹的网站。<a href="https://github.com/tuteng/Best-websites-a-programmer-should-visit-zh" target="_blank" rel="noreferrer">中文版</a></p><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nayafia/lemonade-stand" target="_blank" rel="noreferrer">lemonade-stand</a>：《开源项目挣钱实用手册》<a href="https://github.com/wizicer/FinancialSupportForOpenSource" target="_blank" rel="noreferrer">中文版</a></p><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/judasn/Linux-Tutorial" target="_blank" rel="noreferrer">Linux-Tutorial</a>：Java 程序员眼中的 Linux</p><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ProgrammingFonts/ProgrammingFonts" target="_blank" rel="noreferrer">ProgrammingFonts</a>：适合程序员的编程字体的集合，现在有 30 多种奇妙的字体</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/40389983.png" style="max-width:80%;"></p><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/marcobiedermann/search-engine-optimization" target="_blank" rel="noreferrer">search-engine-optimization</a>：（英文）这个项目收集了很多 SEO 优化的建议</p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/feiskyer/sdn-handbook" target="_blank" rel="noreferrer">sdn-handbook</a>：有关 SDN 的资料和书籍非常丰富，但入门和学习 SDN 依然是非常困难。该项目整理了 SDN 实践中的一些基本理论和实践案例心得，希望大家看完后有所收获</p><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/sdiehl/write-you-a-haskell" target="_blank" rel="noreferrer">write-you-a-haskell</a>：（英文）《Write You a Haskell》</p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/VivekPa/AIAlpha" target="_blank" rel="noreferrer">AIAlpha</a>：使用无监督学习和监督学习来预测股票，有趣的项目。运行步骤如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone https://github.com/VivekPa/AlphaAI.git</span></span>
<span class="line"><span>cd AlphaAI</span></span>
<span class="line"><span>pip install -r requirements.txt</span></span>
<span class="line"><span>python run.py</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/151904296.png" style="max-width:80%;"></p><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/josephmisiti/awesome-machine-learning" target="_blank" rel="noreferrer">awesome-machine-learning</a>：一个精选的机器学习框架、库、软件的集合项目</p><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/google-research/bert" target="_blank" rel="noreferrer">bert</a>：一种新的语言表征模型，来自 Transformer 的双向编码器表征。目前最强 NLP 预训练模型，横扫 11 项 NLP 任务记录</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/154747577.png" style="max-width:80%;"></p><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/google/deepvariant" target="_blank" rel="noreferrer">deepvariant</a>：一个数据分析工作流。能够使用深度神经网络从下一代 DNA 序列数据中调用遗传变异体，联想到了最近的基因编辑人类事件。关于如何工作的技术细节，如下图：</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/32/111751293.png" style="max-width:80%;"></p><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/fastai/fastai" target="_blank" rel="noreferrer">fastai</a>：利用当前最好的深度学习算法简化训练神经网络的过程。包含了很多“开箱即用”的工具，支持 Vision、Collab 等模型。示例代码：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># here&#39;s how to train an MNIST model using resnet18</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">untar_data(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MNIST_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> image_data_from_folder(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MNIST_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">learn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> create_cnn(data, tvm.resnet18, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">metrics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">accuracy)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">learn.fit(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub31.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub33.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/32">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,82),l=[n];function p(r,h,o,c,g,k){return t(),a("div",null,l)}const b=s(i,[["render",p]]);export{u as __pageData,b as default};
