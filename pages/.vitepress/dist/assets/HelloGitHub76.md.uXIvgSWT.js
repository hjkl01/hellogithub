import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const d=JSON.parse('{"title":"《HelloGitHub》第 76 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub76.md","filePath":"HelloGitHub76.md"}'),n={name:"HelloGitHub76.md"},h=t(`<h1 id="《hellogithub》第-76-期" tabindex="-1">《HelloGitHub》第 76 期 <a class="header-anchor" href="#《hellogithub》第-76-期" aria-label="Permalink to &quot;《HelloGitHub》第 76 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/76" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/chrismaltby/gb-studio" target="_blank" rel="noreferrer">gb-studio</a>：简单好玩的 Game Boy 游戏制作工具。这是一款可视化游戏构建工具。无需编程基础即可通过拖拽的方式，快速制作出复古风格的 Game Boy 游戏。不仅支持导出游戏 ROM，还可以直接构建成在线游戏。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/181894913.gif" style="max-width:80%;"></p><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jqlang/jq" target="_blank" rel="noreferrer">jq</a>：轻快的命令行 JSON 处理器。JSON 作为最常见的序列化格式，日常开发中经常会遇到。这个项目可以通过简单的命令对 JSON 数据进行格式化、过滤等操作，还支持直接解析接口的 JSON 数据，十分灵活和方便。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/5101141.png" style="max-width:80%;"></p><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/libvips/libvips" target="_blank" rel="noreferrer">libvips</a>：极快的多线程图像处理库。具有占用内存小、处理速度快等特点的图像处理底层库。它能够处理多种图像和像素格式，为了使用方便不仅支持命令行调用，官方还提供了 Ruby、Python 等多种编程语言的 SDK。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/1291410.png" style="max-width:80%;"></p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/TastSong/CrazyCar" target="_blank" rel="noreferrer">CrazyCar</a>：一款用 Unity 制作的联机赛车游戏。这是一套完整的网络联机游戏解决方案，项目包含游戏端、服务器端、网络传输和管理后台。游戏支持计时赛、多人比赛、个人成就、资源热更等特性，可以运行在 iOS/Android/Windows 设备上。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/416555156.png" style="max-width:80%;"></p><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ldqk/Masuit.Tools" target="_blank" rel="noreferrer">Masuit.Tools</a>：C# 开发工具箱。该库包含了 C# 日常开发常用的操作类，比如字符串处理、进制转换、日期处理、加密/解密、文件压缩、图像裁剪、断点续传、分布式 ID 等。</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> milliseconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetTotalMilliseconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取毫秒级时间戳</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> microseconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetTotalMicroseconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取微秒级时间戳</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> nanoseconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetTotalNanoseconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取纳秒级时间戳</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetTotalSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取秒级时间戳</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> minutes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DateTime.Now.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetTotalMinutes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取分钟级时间戳</span></span></code></pre></div><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/isocpp/CppCoreGuidelines" target="_blank" rel="noreferrer">CppCoreGuidelines</a>：C++ 核心指南。一份由 C++ 之父 Bjarne Stroustrup 领导的 C++ 编码指南，目的是为了帮助大家更好地使用现代 C++。这个项目主要讨论的是关于 C++ 编写接口、内存管理、并发等方面的问题，适合有一定 C++ 基础想要进阶的小伙伴。</p><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/google/flatbuffers" target="_blank" rel="noreferrer">flatbuffers</a>：谷歌开源的高性能序列化库。类似 Protocol Buffers 的序列化格式，但解析速度更快、占用内存更少，多用于对解析耗时敏感的 Android 应用和游戏。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/19953044.png" style="max-width:80%;"></p><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ocornut/imgui" target="_blank" rel="noreferrer">imgui</a>：游戏行业内流行的轻量级 C++ 图形界面库。这是个即时模式的 GUI 框架，控件都需要手绘。优点是更加灵活和轻量，可以快速构建功能简单、体积小的 GUI 程序，但不适合用来实现复杂动画的 GUI 应用，多用于开发游戏内的 GUI 工具。</p><div class="language-C++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ImGui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ImGui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Save&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    MySaveFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ImGui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InputText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;string&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, buf, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IM_ARRAYSIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buf));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ImGui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SliderFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;float&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/22067521.jpg" style="max-width:80%;"></p><h3 id="css-项目" tabindex="-1">CSS 项目 <a class="header-anchor" href="#css-项目" aria-label="Permalink to &quot;CSS 项目&quot;">​</a></h3><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/AllThingsSmitty/css-protips" target="_blank" rel="noreferrer">css-protips</a>：CSS 专业技巧。一个帮你提升 CSS 技巧的收藏集。</p><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/eludadev/ui-buttons" target="_blank" rel="noreferrer">ui-buttons</a>：CSS 按钮样式集合。该项目实现了 100 种不同样式的按钮。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/492267422.png" style="max-width:80%;"></p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/gitleaks/gitleaks" target="_blank" rel="noreferrer">gitleaks</a>：一款静态应用程序安全测试(SAST)工具。它可以检测项目中是否包含密码、API Key、token 等信息，还能够轻松整合到 Git Hook 和 GitHub Action，实现提交代码时自动检测，通过告警和阻止 push 等方式，有效地防止敏感信息泄漏。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/119190187.gif" style="max-width:80%;"></p><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dunglas/mercure" target="_blank" rel="noreferrer">mercure</a>：一种用于实时通信的开放式协议。该项目是基于 HTTP 和 SSE 的一种协议，然后用 Go 语言实现的实时推送服务。相较于 WebSocket 协议它使用起来更加简单，客户端发起订阅就和请求普通的 HTTP 接口一样，而且在 HTTP/2 下还可以双向通信。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/140949512.png" style="max-width:80%;"></p><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/crossoverJie/ptg" target="_blank" rel="noreferrer">ptg</a>：用 Go 写的 GUI gRPC 客户端。作者在调试 gPRC 接口时，发现没有类似 postman 趁手的 gPRC 客户端，所以就自己动手写了一个然后开源了。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/415986304.gif" style="max-width:80%;"></p><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/greycodee/wechat-backup" target="_blank" rel="noreferrer">wechat-backup</a>：本地备份微信聊天记录的工具。它能够将手机上的微信聊天记录，解密后保存在电脑上，支持查看、搜索、恢复微信聊天记录。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/503408858.png" style="max-width:80%;"></p><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example" target="_blank" rel="noreferrer">wild-workouts-go-ddd-example</a>：Go DDD 示例项目。该项目通过一个预约系统的示例，展示了如何在 Go 项目中实现领域驱动设计(DDD)和读写分离架构(CQRS)。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/261871717.png" style="max-width:80%;"></p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dromara/forest" target="_blank" rel="noreferrer">forest</a>：极简的声明式 Java HTTP 客户端。一个开源的 Java HTTP 客户端框架，采用声明式的开发方式，分分钟即可完成 HTTP 请求的定义、发送、接收、解析、错误处理、日志打印等操作。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AmapClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * @Get注解代表该方法专做GET请求</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 在url中的{0}代表引用第一个参数，{1}引用第二个参数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://ditu.amap.com/service/regeo?longitude={0}&amp;latitude={1}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Map </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">longitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">latitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注入接口实例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AmapClient amapClient;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用接口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Map result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> amapClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;121.475078&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;31.223577&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result);</span></span></code></pre></div><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dromara/liteflow" target="_blank" rel="noreferrer">liteflow</a>：轻快、稳定可编排的规则引擎。规则引擎能够帮助系统解耦，实现通过修改规则就可以适应复杂多变的业务逻辑。这是一个功能强大的 Java 规则引擎，支持同步异步混编、平滑热刷新，无需重启应用即可让新规则生效，规则语法简单、文档通俗易懂，学习门槛低容易上手。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/250036571.png" style="max-width:80%;"></p><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/remkop/picocli" target="_blank" rel="noreferrer">picocli</a>：构建 Java 命令行应用的框架。简单易用寥寥几行代码，就可以完成一个 Java 命令行应用程序。虽然由 Java 编写但可以在 Groovy、Kotlin、Scala 中使用，支持命令自动补全、颜色、子命令、帮助信息等功能。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> picocli.CommandLine;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> picocli.CommandLine.Option;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> picocli.CommandLine.Parameters;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.io.File;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;example&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixinStandardHelpOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">version</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Picocli example 4.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Option</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">names</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-v&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--verbose&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Verbose mode. Helpful for troubleshooting. Multiple -v options increase the verbosity.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1..*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">paramLabel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FILE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;File(s) to process.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] inputFiles;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (verbose.length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputFiles.length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; files to process...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (verbose.length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (File f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inputFiles) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // By implementing Runnable or Callable, parsing, error handling and handling user</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // requests for usage help or version help can be done with one line of code.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exitCode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CommandLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Example</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exitCode);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/80640282.png" style="max-width:80%;"></p><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/mjmlio/mjml" target="_blank" rel="noreferrer">mjml</a>：能够快速制作出响应式邮件的框架。邮件样式是一个让人头疼的问题，而通过这个项目制作的邮件，可以正常地显示在不同的邮件客户端。它还提供了在线编辑器，以及多种邮件模版和丰富的组件，能够帮你快速制作出精美、移动端优先、响应式的邮件。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/50586840.png" style="max-width:80%;"></p><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tusen-ai/naive-ui" target="_blank" rel="noreferrer">naive-ui</a>：仅支持 Vue3 的组件库。拥有完善的 TypeScript 类型推导的 Vue3 组件库，拥有 80 多种组件、中文文档，如果你想换换“口味”可以试试它。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/373855820.png" style="max-width:80%;"></p><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Bowen7/regex-vis" target="_blank" rel="noreferrer">regex-vis</a>：在线可视化正则编辑器。该项目可将输入的正则表达式，自动生成对应的可视化图形，支持通过编辑图形节点修改正则表达式，以及对正则表达式进行测试等功能。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/295656398.gif" style="max-width:80%;"></p><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/x-extends/vxe-table" target="_blank" rel="noreferrer">vxe-table</a>：好用的 Vue 表格组件。支持增删改查、虚拟列表、大数据懒加载、数据校验、分页、弹窗等功能的 Vue 表格组件。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/182395618.png" style="max-width:80%;"></p><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/wangeditor-team/wangEditor" target="_blank" rel="noreferrer">wangEditor</a>：一款开源的 Web 富文本编辑器。基于 slate.js 和 snabbdom.js 实现的富文本编辑器，支持 JS、Vue 和 React 框架。开箱即用仅需几行代码，就能实现一个功能齐全的富文本编辑器。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@wangeditor/editor/dist/css/style.css&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createEditor, createToolbar } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@wangeditor/editor&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建编辑器</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> editor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createEditor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  selector: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#editor-container&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建工具栏</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> toolbar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createToolbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  editor,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  selector: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#toolbar-container&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/26262860.png" style="max-width:80%;"></p><h3 id="kotlin-项目" tabindex="-1">Kotlin 项目 <a class="header-anchor" href="#kotlin-项目" aria-label="Permalink to &quot;Kotlin 项目&quot;">​</a></h3><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tangshimin/typing-learner" target="_blank" rel="noreferrer">typing-learner</a>：可通过视频生成单词本的背单词应用。该项目可将 MKV 格式的英文视频制作成单词库，在记忆单词时可通过台词和播放视频片段，让每个单词都有语境，帮助理解和记忆英文单词。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/479222482.gif" style="max-width:80%;"></p><h3 id="objective-c-项目" tabindex="-1">Objective-C 项目 <a class="header-anchor" href="#objective-c-项目" aria-label="Permalink to &quot;Objective-C 项目&quot;">​</a></h3><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tencent/lemon-cleaner" target="_blank" rel="noreferrer">lemon-cleaner</a>：苹果电脑专属的清理工具。腾讯开源的免费 macOS 设备空间清理工具「柠檬清理」，支持深度清理、删除重复文件、卸载应用、状态栏显示等功能，能够一键轻松清理垃圾释放空间。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/513077635.png" style="max-width:80%;"></p><h3 id="php-项目" tabindex="-1">PHP 项目 <a class="header-anchor" href="#php-项目" aria-label="Permalink to &quot;PHP 项目&quot;">​</a></h3><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/xiaochong0302/course-tencent-cloud" target="_blank" rel="noreferrer">course-tencent-cloud</a>：PHP 写的网课平台。依托腾讯云基础服务架构，采用 Phalcon 框架开发的网课系统，支持付费、点播、直播、专栏、问答、会员、秒杀等功能。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/296000242.png" style="max-width:80%;"></p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/mingrammer/diagrams" target="_blank" rel="noreferrer">diagrams</a>：用 Python 代码图解系统架构。程序员在做技术方案的时候，系统架构图是必不可少的。该项目将绘制架构图时所需的图标，封装成了对应的类极易调用，文档还提供了丰富的示例，让你分分钟就能上手，轻松用 Python 快速绘制出一份精美且清晰的架构图，这样不仅能省去拖拽调整连线的步骤，而且代码还可以复用，以便应对不断迭代升级的架构。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Diagram(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Advanced Web Service with On-Premise&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">show</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ingress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Nginx(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ingress&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    metrics </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Prometheus(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;metric&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    metrics </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Grafana(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;monitoring&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cluster(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Service Cluster&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        grpcsvc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Server(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grpc1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Server(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grpc2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Server(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grpc3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cluster(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sessions HA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        primary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Redis(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;session&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        primary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Redis(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;replica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metrics</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        grpcsvc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> primary</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cluster(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Database HA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        primary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PostgreSQL(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;users&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        primary </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PostgreSQL(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;replica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metrics</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        grpcsvc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> primary</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aggregator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Fluentd(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;logging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aggregator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Kafka(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stream&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Spark(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;analytics&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ingress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> grpcsvc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aggregator</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/237791077.png" style="max-width:80%;"></p><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/HumanSignal/labelImg" target="_blank" rel="noreferrer">labelImg</a>：图形化界面的图像标注工具。用 Python 和 Qt 编写的图像标注桌面应用，简单方便下载就能用，适用于 Windows、Linux、macOS。标注数据支持 PASCAL VOC 格式的 XML 文件和 YOLO 的 txt 文件。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/42625970.jpg" style="max-width:80%;"></p><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/MechanicalSoup/MechanicalSoup" target="_blank" rel="noreferrer">MechanicalSoup</a>：自动与网站交互的轻量级 Python 库。我们写爬虫一般是请求+解析两步走，该项目将 Requests(请求) 和 BeautifulSoup(解析) 两大 Python 爬虫常用库，封装成一个浏览器对象(StatefulBrowser)，将上面说的两步并成一步。后面仅需一个浏览器对象，就可以完成请求页面、过滤内容、提交表单、跳转地址等操作，使得代码更加简单、操作更加方便。又因为它不依赖浏览器进程，所以相较于 Selenium 它更加轻巧，但缺点是不支持 JS 动态渲染的页面。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mechanicalsoup</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Connect to Google</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mechanicalsoup.StatefulBrowser()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser.open(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.google.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fill-in the form</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser.select_form(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;form[action=&quot;/search&quot;]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;q&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MechanicalSoup&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Note: the button name is btnK in the content served to actual</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># browsers, but btnG for bots.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser.submit_selected(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">btnName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;btnG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Display links</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.links():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    target </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link.attrs[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;href&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Filter-out unrelated links and extract actual URL from Google&#39;s</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # click-tracking.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (target.startswith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/url?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            target.startswith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/url?q=http://webcache.googleusercontent.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        target </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re.sub(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">^</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">/url</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\?</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">q=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&amp;]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">\\1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, target)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target)</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/20180433.png" style="max-width:80%;"></p><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/biolab/orange3" target="_blank" rel="noreferrer">orange3</a>：互动式数据分析桌面工具。一款面向不会编程人群的数据挖掘和数据可视化工具箱。内置多种图表类型、支持可视化编程，无需写代码即可做出简单、实用的数据分析软件，多用于教学和实验室等场景。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/8357227.png" style="max-width:80%;"></p><p>31、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ydataai/ydata-profiling" target="_blank" rel="noreferrer">ydata-profiling</a>：能够自动生成 pandas DataFrame 分析报告的库。虽然 pandas 自带的 df.describe 函数可以方便地生成统计报告，但是信息较少。该项目能够自动生成一份 df 多维度的 HTML 分析报告，包含列的类型、缺失情况、数值分布、行重复率、占用内存大小等信息，有助于更好地了解数据情况。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/49346299.png" style="max-width:80%;"></p><h3 id="rust-项目" tabindex="-1">Rust 项目 <a class="header-anchor" href="#rust-项目" aria-label="Permalink to &quot;Rust 项目&quot;">​</a></h3><p>32、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Nukesor/pueue" target="_blank" rel="noreferrer">pueue</a>：命令行任务管理工具。一个处理 shell 命令队列的工具，支持后台执行、定时执行、任务并行、暂停任务、任务崩溃恢复等功能。但它只是一个命令行工具，不能当作任务队列来用。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/41925963.gif" style="max-width:80%;"></p><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>33、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tw93/MiaoYan" target="_blank" rel="noreferrer">MiaoYan</a>：一款 macOS 上的 Markdown 编辑器。采用 Swift5 原生开发，适用于 macOS 的 Markdown 编辑器「妙言」。界面清爽好看，支持 PPT 模式、语法高亮、黑暗模式等功能。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/253461233.gif" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>34、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/hemanth/functional-programming-jargon" target="_blank" rel="noreferrer">functional-programming-jargon</a>：函数式编程世界的行话。该项目希望通过介绍函数编程中的术语，让学习函数式编程变得容易些，示例代码均采用 JavaScript 编写。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/31168578.png" style="max-width:80%;"></p><p>35、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/lxgw/LxgwWenKai" target="_blank" rel="noreferrer">LxgwWenKai</a>：适合正文阅读的开源中文字体。它是基于 FONTWORKS 出品的 Klee One 字体衍生品，并且针对简体中文做了增补和优化，字体效果惊艳、完全免费且支持商用。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/334448316.png" style="max-width:80%;"></p><p>36、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/MaaAssistantArknights/MaaAssistantArknights" target="_blank" rel="noreferrer">MaaAssistantArknights</a>：明日方舟游戏助手。基于图像识别技术，实现一键完成明日方舟游戏的全部日常任务。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/384520418.png" style="max-width:80%;"></p><p>37、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/evilsocket/opensnitch" target="_blank" rel="noreferrer">opensnitch</a>：一个 Linux 应用防火墙。它能够监视和控制应用的网络活动，相当于 Linux 版的 Little Snitch。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/88417028.png" style="max-width:80%;"></p><p>38、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/GetPublii/Publii" target="_blank" rel="noreferrer">Publii</a>：带 GUI 的静态网站生成工具。一款本地的静态网站 CMS 工具，有了它无需编程基础，即可通过图形化界面，轻松地创建个人博客、企业官网等，还支持一键发布到 GitHub Page、GitLab、Netlify 等网站。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/137733266.png" style="max-width:80%;"></p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>39、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/gwuhaolin/dive-into-webpack" target="_blank" rel="noreferrer">dive-into-webpack</a>：《深入浅出 Webpack》。一本系统讲解 Webpack 的书，内容涵盖了 Webpack 的入门、配置、实战、优化以及原理。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/110203554.png" style="max-width:80%;"></p><p>40、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/BoltzmannEntropy/interviews.ai" target="_blank" rel="noreferrer">interviews.ai</a>：《深度学习面试》。书中包含了数百个人工智能领域面试时会遇到的问题(PRB)和解答(SOL)，作者希望可以借此帮助研究生/求职者，通过机器学习方面的面试。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/412151953.png" style="max-width:80%;"></p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>41、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/flairNLP/flair" target="_blank" rel="noreferrer">flair</a>：简单易用的 NLP 框架。基于 PyTorch 的 NLP 框架，支持文本命名实体识别(NER)、词性标注(PoS)、词义消歧和分类。项目中包含详细的使用教程，介绍了如何标记文本、训练语言模型等。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flair.data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Sentence</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flair.models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SequenceTagger</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># make a sentence</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sentence </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Sentence(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;I love Berlin .&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># load the NER tagger</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tagger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SequenceTagger.load(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ner&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># run NER over sentence</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tagger.predict(sentence)</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/136914524.png" style="max-width:80%;"></p><p>42、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/mli/paper-reading" target="_blank" rel="noreferrer">paper-reading</a>：深度学习论文精读集合。李沐发起的深度学习领域经典、最新论文精读视频集合。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/419991646.png" style="max-width:80%;"></p><p>43、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Baiyuetribe/paper2gui" target="_blank" rel="noreferrer">paper2gui</a>：面向非编程人员的 AI 应用工具箱。该项目提供了多款免安装下载即用的 AI 工具，功能涵盖语音合成、视频补帧、图像风格转化、目标检测、OCR 识别等方面，让编程小白也能轻松拥有 AI “魔法”。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/76/415489170.png" style="max-width:80%;"></p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub75.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub77.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/76">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,123),e=[h];function l(p,r,k,g,o,c){return a(),i("div",null,e)}const u=s(n,[["render",l]]);export{d as __pageData,u as default};
