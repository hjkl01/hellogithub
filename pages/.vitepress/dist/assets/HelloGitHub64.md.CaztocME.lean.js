import{_ as i,c as a,a2 as t,o as e}from"./chunks/framework.Gf1jShja.js";const c=JSON.parse('{"title":"《HelloGitHub》第 64 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub64.md","filePath":"HelloGitHub64.md"}'),h={name:"HelloGitHub64.md"};function l(n,s,p,r,k,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="《hellogithub》第-64-期" tabindex="-1">《HelloGitHub》第 64 期 <a class="header-anchor" href="#《hellogithub》第-64-期" aria-label="Permalink to &quot;《HelloGitHub》第 64 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/64" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/FASTSHIFT/X-TRACK" target="_blank" rel="noreferrer">X-TRACK</a>：开源的 GPS 自行车码表。功能齐全且拥有美观的界面，支持离线地图、显示轨迹等功能。<a href="https://www.bilibili.com/video/BV1GB4y1K7VV" target="_blank" rel="noreferrer">在线观看</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/349490770.png" style="max-width:80%;"></p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Uahh/ToastFish" target="_blank" rel="noreferrer">ToastFish</a>：利用 Windows 通知栏背单词的软件。能够选择单词集合，并在背完后进行测验</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/363866643.gif" style="max-width:80%;"></p><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/skydevil88/XboxDownload" target="_blank" rel="noreferrer">XboxDownload</a>：Xbox 下载助手。支持 Xbox 游戏加速下载、比价等功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/376881436.png" style="max-width:80%;"></p><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Zhuagenborn/Plants-vs.-Zombies-Online-Battle" target="_blank" rel="noreferrer">Plants-vs.-Zombies-Online-Battle</a>：在没有游戏源代码的前提下，通过逆向工程和代码注入实现植物大战僵尸局域网对战模式。成功加载后解密模式的最后一关，会变为网络对战关卡。玩法为其中一个玩家放置植物进行防御，另一玩家放置僵尸进攻。项目结合逆向工程、C++和汇编相关技术，在无源代码的前提下为游戏增加功能。对逆向工程感兴趣的小伙可以看看源码</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/294864064.gif" style="max-width:80%;"></p><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/xyz347/xpack" target="_blank" rel="noreferrer">xpack</a>：实现 C++ 结构体和 JSON/XML/BSON 互转的库。C++ 初学者可以通过该项目学到高阶的宏技巧和初级的 SFINAE 写法</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xpack/json.h&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 包含该头文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::string name;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    XPACK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">O</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 添加宏定义XPACK在结构体定义结尾</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">argv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    User u;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    string data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:12345, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xpack</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, u);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // json转结构体</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u.id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u.name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    string json </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 结构体转json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="css-项目" tabindex="-1">CSS 项目 <a class="header-anchor" href="#css-项目" aria-label="Permalink to &quot;CSS 项目&quot;">​</a></h3><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/necolas/normalize.css" target="_blank" rel="noreferrer">normalize.css</a>：用来消除浏览器默认样式的 CSS 库。不同浏览器对于同一个元素会有不一样的默认样式，比如：超链接线的颜色。相较于 reset（重制样式）解决办法，normalize.css 采用更加和平且高效地方式，解决了浏览器默认样式的问题，尽可能让同一个 CSS 文件在不同的浏览器上显示效果一样和正常</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/1700621.png" style="max-width:80%;"></p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dtm-labs/dtm" target="_blank" rel="noreferrer">dtm</a>：Go 语言实现的分布式事务管理器。优雅的解决了微服务架构下幂等、空补偿、悬挂等分布式事务难题，提供了简单易用、高性能、易水平扩展的分布式事务解决方案，除 Go 外还有 Python、PHP、Node.js 等语言的客户端</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 具体业务微服务地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> qsBusi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://localhost:8081/api/busi_saga&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	req </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">H</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;amount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 微服务的载荷</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// DtmServer为DTM服务的地址，是一个url</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	saga </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dtmcli.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NewSaga</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:8080/api/dtmsvr&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// 添加一个TransOut的子事务，正向操作为url: qsBusi+&quot;/TransOut&quot;， 补偿操作为url: qsBusi+&quot;/TransOutCompensate&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(qsBusi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/TransOut&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, qsBusi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/TransOutCompensate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, req).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// 添加一个TransIn的子事务，正向操作为url: qsBusi+&quot;/TransOut&quot;， 补偿操作为url: qsBusi+&quot;/TransInCompensate&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(qsBusi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/TransIn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, qsBusi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/TransInCompensate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, req)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// 提交saga事务，dtm会完成所有的子事务/回滚所有的子事务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> saga.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Submit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/367758176.png" style="max-width:80%;"></p><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/erda-project/erda" target="_blank" rel="noreferrer">erda</a>：企业级一站式 PaaS 平台。基于 Kubernetes 以应用为中心的 DevOps 且支持微服务治理的多云架构，可以让复杂业务的开发、运维、监控和问题诊断变得更简单、更高效。能减轻使用不同的工具混搭技术底座和云平台的运维难度，同时还有漂亮、简单易用的界面设计</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/344676663.gif" style="max-width:80%;"></p><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Terry-Mao/goim" target="_blank" rel="noreferrer">goim</a>：轻量级、高性能、支持集群的 IM 和实时推送服务。纯 Golang 实现支持广播消息、房间推送、安全验证和多协议支持等功能，还有基于 Kafka 的异步消息推送</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/34854605.png" style="max-width:80%;"></p><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/gohugoio/hugo" target="_blank" rel="noreferrer">hugo</a>：Go 语言的静态网站生成器。静态网站生成器就是在本地把内容文件生成静态网页（HTML+CSS），然后把生成好的页面上传到服务器的工具。这种工具能够帮你轻松且快速地上线网站，而用户仅需选择喜欢的主题，便可以专注于内容创作。Hugo 作为最流行的静态网站生成器之一，拥有丰富的插件和主题，就算没有编程基础也能帮你快速制作出满意的博客或者网站</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/11180687.png" style="max-width:80%;"></p><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tophubs/TopList" target="_blank" rel="noreferrer">TopList</a>：各大网站热门头条的聚合网站。<a href="https://mo.fish/" target="_blank" rel="noreferrer">在线预览</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/196937459.png" style="max-width:80%;"></p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dataease/dataease" target="_blank" rel="noreferrer">dataease</a>：开源的数据可视化和分析工具。采用 SpringBoot+Vue.js 技术栈实现，通过丰富的可视化图表让数据更加直观</p><ul><li>数据连接：支持关系型数据库、Excel 等文件、Hadoop 等大数据平台、NoSQL 等各种数据源</li><li>图表展示：支持 PC 端、移动端及大屏</li><li>制作图表：支持丰富的图表类型、支持拖拉拽方式快速制作仪表板</li><li>数据引擎：支持直连模式、本地模式</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/335164964.gif" style="max-width:80%;"></p><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/google/guava" target="_blank" rel="noreferrer">guava</a>：Google 开源的 Java 三方类库。该库提供包括集合、I/O、缓存、并发等开箱即用的工具方法，任何的 Java 应用都可以通过依赖的方式引入该项目。作为 Google 的开源项目，本身的源码也是非常值得开发者学习</p><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/pagehelper/Mybatis-PageHelper" target="_blank" rel="noreferrer">Mybatis-PageHelper</a>：MyBatis 通用分页插件，<a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md" target="_blank" rel="noreferrer">使用方法</a></p><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/bradtraversy/50projects50days" target="_blank" rel="noreferrer">50projects50days</a>：50 个采用 HTML+CSS+JS 的前端小项目集合。项目包含网页源码和效果展示，标准入门级的前端开源项目。通过查看效果让新手感受前端的美妙，简单的源码降低了上手写代码门槛。或许其中某个网页的效果也会让工作多年的你大呼哇塞</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/313330998.png" style="max-width:80%;"></p><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ether/etherpad-lite" target="_blank" rel="noreferrer">etherpad-lite</a>：支持实时协作的富文本 WYSIWYG 编辑器</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/1529160.gif" style="max-width:80%;"></p><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/thx/gogocode" target="_blank" rel="noreferrer">gogocode</a>：简化 JavaScript 抽象语法树（AST）处理的工具。借鉴了类似 jQuery 的预发和字符串构建 AST 的思想，大大简化了学习成本、降低了开发复杂度，官方团队在此基础上还开发出了 <a href="https://gogocode.io/zh/docs/vue/vue2-to-vue3" target="_blank" rel="noreferrer">Vue2 转 Vue3 的插件</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/344026346.png" style="max-width:80%;"></p><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/rubickCenter/rubick" target="_blank" rel="noreferrer">rubick</a>：基于 Electron 开发的开源插件化工具箱。起初项目作者是 uTools 的用户但 uTools 没有开源，他又想接入公司内部的工具，然后 Rubick（拉比克）就诞生了。它实现了 uTools 的大部分功能，可以适配 uTools 丰富的开源插件，享受用完即走的便利</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/375877482.gif" style="max-width:80%;"></p><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/bitwiseshiftleft/sjcl" target="_blank" rel="noreferrer">sjcl</a>：斯坦福大学开源的 JavaScript 加密库。用于 JS 的加密和解密，体积小且支持多种加密算法</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sjcl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//加密数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sjcl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;encrypted-data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//解密数据</span></span></code></pre></div><h3 id="kotlin-项目" tabindex="-1">Kotlin 项目 <a class="header-anchor" href="#kotlin-项目" aria-label="Permalink to &quot;Kotlin 项目&quot;">​</a></h3><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/thunderbird/thunderbird-android" target="_blank" rel="noreferrer">thunderbird-android</a>：开源的 Android 电子邮件客户端</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/1326671.png" style="max-width:80%;"></p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/TurboWay/bigdata_analyse" target="_blank" rel="noreferrer">bigdata_analyse</a>：大数据分析实战项目的集合。该项目包含了淘宝、租房、招聘等数据的分析实例，不仅有 Python、SQL、HQL 的实例代码，还附上了数据集下载地址。想学习大数据的同学们，万事俱备就差你来学了</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/324295142.png" style="max-width:80%;"></p><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/yqchilde/JDMemberCloseAccount" target="_blank" rel="noreferrer">JDMemberCloseAccount</a>：用 Python 操作 selenium 的实战项目。该项目以全自动退出京东加入的店铺会员为例，介绍了 Python 自动化的知识和方案</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/364211069.png" style="max-width:80%;"></p><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/QingdaoU/OnlineJudge" target="_blank" rel="noreferrer">OnlineJudge</a>：青岛大学开源的在线评测系统（OJ），采用 Django+Vue.js 实现。功能如下：</p><ul><li>基于 Docker 的一键部署</li><li>支持 ACM/OI 两种比赛模式、实时/非实时评判</li><li>丰富的可视化图表，一图胜千言</li><li>支持多种编程语言：C/C++、Java、Python2/3</li><li>比赛用户 IP 限制 (CIDR ranges)</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/40759452.png" style="max-width:80%;"></p><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/python-pillow/Pillow" target="_blank" rel="noreferrer">Pillow</a>：最流行的 Python 图像处理库。它的诞生是由于 PIL 的年久失修，现已于 2011 年停止维护，所以开源爱好者们就在 PIL 的基础上创建了 Pillow。该库支持丰富的图像格式和强大的图像处理功能，如果你要用 Python 处理图像，它绝对是不二之选</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装：pip install pillow</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意安装的版本，不同版本支持的 Python 版本也不同</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PIL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Image</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打开 jpg 图像文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">im </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Image.open(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hellogithub.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转换成黑白图像</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">grayscale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tatras.convert(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;L&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 展示图像</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">grayscale.show()</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/5171600.png" style="max-width:80%;"></p><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/shinnytech/tqsdk-python" target="_blank" rel="noreferrer">tqsdk-python</a>：开源的 Python 量化交易框架。使用少量代码即可实现量化交易程序，还支持历史数据、实时数据、策略回测、实盘交易、图形化界面展示等功能。但免费版本仅提供全部的期货、商品/金融期权和上证50、沪深300 和中证500 的实时行情，付费版支持更多种类以及更加稳定的服务</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tqsdk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TqApi, TqAuth, TqAccount, TargetPosTask</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TqApi(TqAccount(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;H海通期货&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4003242&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TqAuth(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;信易账户&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;账户密码&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建 TqApi 实例, 指定交易账户</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">q_1910 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.get_quote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SHFE.rb1910&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 订阅近月合约行情</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t_1910 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TargetPosTask(api, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SHFE.rb1910&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建近月合约调仓工具</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">q_2001 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.get_quote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SHFE.rb2001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 订阅远月合约行情</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t_2001 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TargetPosTask(api, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SHFE.rb2001&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建远月合约调仓工具</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  api.wait_update()                                           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 等待数据更新</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  spread </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> q_1910.last_price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> q_2001.last_price        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 计算近月合约-远月合约价差</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;当前价差:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, spread)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spread </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 250</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;价差过高: 空近月，多远月&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t_1910.set_target_volume(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要求把1910合约调整为空头1手</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t_2001.set_target_volume(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要求把2001合约调整为多头1手</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  elif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spread </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;价差回复: 清空持仓&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要求把 1910 和 2001合约都调整为不持仓</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t_1910.set_target_volume(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    t_2001.set_target_volume(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/136556542.png" style="max-width:80%;"></p><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/mozilla-mobile/firefox-ios" target="_blank" rel="noreferrer">firefox-ios</a>：Firefox 浏览器 iOS 源码</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/26133979.jpeg" style="max-width:80%;"></p><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/SwifterSwift/SwifterSwift" target="_blank" rel="noreferrer">SwifterSwift</a>：500合1 的原生 Swift 扩展库集合。集成了 500 多个原生 Swift 扩展的库，提供了更加方便的函数、语法糖、数据类型、UIKit 以及更高性能的 Cocoa 类，提高 Swift 的开发效率实现 1+1&gt;2 的效果。适用于 iOS、macOS、tvOS 等系统</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 原来使用 UIAlertController 实现提醒的代码如下：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alert </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIAlertController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;测试&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HelloGitHub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">preferredStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .alert)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> okAction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIAlertAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OK&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .cancel, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alert.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(okAction)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">present</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alert, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 改成 SwifterSwift 后：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alert </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIAlertController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;测试&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HelloGitHub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alert.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/64705781.png" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/doublespeakgames/adarkroom" target="_blank" rel="noreferrer">adarkroom</a>：《小黑屋》是一款有趣的文字冒险类游戏。支持中文能够运行在浏览器、iOS 和 Android 设备，浏览器上默认会保存游戏进度到本地，另外还支持存档导入/导出防止丢失。友情提示：没玩过的同学刚开始容易摸不着头脑，因为事件触发需要时间，看滚动的文字+点击“添柴”耐心等 30 秒，就会触发新的事件了。如果你喜欢养成类游戏，那它一定会是你的菜。<a href="http://adarkroom.doublespeakgames.com/?lang=zh_cn" target="_blank" rel="noreferrer">在线试玩</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/11152831.png" style="max-width:80%;"></p><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/kamranahmedse/developer-roadmap" target="_blank" rel="noreferrer">developer-roadmap</a>：开发者学习路线图。这是一份包含后端、前端、运维部署等方向的学习路径图，帮你指明前进的方向。<a href="https://github.com/kamranahmedse/developer-roadmap/tree/master/translations/chinese" target="_blank" rel="noreferrer">中文</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/85077558.png" style="max-width:80%;"></p><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/elasticsearch-dump/elasticsearch-dump" target="_blank" rel="noreferrer">elasticsearch-dump</a>：Elasticsearch 数据导入/导出工具，可以用于 ES 的数据备份和迁移</p><p>31、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/freeCodeCamp/freeCodeCamp" target="_blank" rel="noreferrer">freeCodeCamp</a>：免费学习编程的开源社区。它创立于 2014 年，期间帮助了无数编程爱好者学习编程，<a href="https://chinese.freecodecamp.org/" target="_blank" rel="noreferrer">中文站点</a>于 2021 年上线。freeCodeCamp 采用在线编程闯关的学习形式，遇到问题还可以通过活跃的社区答疑解惑。平台鼓励新手多动手写代码、运行代码，提倡 RSA 即：遇到问题先阅读文档资料，然后求助于搜索引擎，最后实在没招了再提问，这样有助于培养良好的提问习惯终身受益。同时作为非盈利组织，freeCodeCamp 不仅提供了免费学习的课程还开源了网站代码</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/28457823.png" style="max-width:80%;"></p><p>32、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/banga/git-split-diffs" target="_blank" rel="noreferrer">git-split-diffs</a>：更加直观展示代码改动的命令行工具。在终端上使用 <code>git diff</code> 查看修改时，默认的展示效果并不直观，该项目将代码的改动以类似 GitHub 网站的风格展示方便查看，还有多种主题可供选择</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/356674026.png" style="max-width:80%;"></p><p>33、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/vercel/hyper" target="_blank" rel="noreferrer">hyper</a>：基于 Electron 的超高颜值终端工具。颜值即正义不仅在找对象时有用，挑工具时也同样奏效。它支持包括 Windows、Linux、macOS 等主流操作系统快下载试试，让你的终端漂亮得不像实力派</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/62367558.png" style="max-width:80%;"></p><p>34、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nocodb/nocodb" target="_blank" rel="noreferrer">nocodb</a>：开源的智能表格制作工具。我最初以为 nocodb 只是数据库桌面管理工具，后来我发现自己狭隘了。它不仅可以把数据库和图片等数据转化成表格的方式展现，还提供了团队协作、工作流接入以及更加开放 API 服务。让团队在数据上工作，数据就在手边“即视即用”。知名电子表格-数据库混合体 Airtable 产品的开源替代品</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/108761645.png" style="max-width:80%;"></p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>35、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/OWASP/CheatSheetSeries" target="_blank" rel="noreferrer">CheatSheetSeries</a>：OWASP（开放式 Web 应用程序安全项目）速查表。项目由 OWASP 社区的安全专家编写，列举了多种安全问题和解决方案，从而更好地保护你的 Web 应用。<a href="https://cheatsheetseries.owasp.org/" target="_blank" rel="noreferrer">在线阅读</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/162723104.png" style="max-width:80%;"></p><p>36、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/bolasblack/http-api-guide" target="_blank" rel="noreferrer">http-api-guide</a>：《HTTP 接口设计指北》内容为设计 Web API 的一些建议</p><p>37、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tobegit3hub/understand_linux_process" target="_blank" rel="noreferrer">understand_linux_process</a>：《理解 Linux 进程》</p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>38、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tianqiraf/DouZero_For_HappyDouDiZhu" target="_blank" rel="noreferrer">DouZero_For_HappyDouDiZhu</a>：基于快手开源的斗地主强化学习框架，实现的欢乐斗地主 AI 助手</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/384885506.png" style="max-width:80%;"></p><p>39、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/szad670401/HyperLPR" target="_blank" rel="noreferrer">HyperLPR</a>：中文车牌识别开源框架。支持 Python、Android、C++ 等编程语言调用，接入简单准确度较高。推荐给有车牌识别需求的小伙伴</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/104621881.png" style="max-width:80%;"></p><p>40、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/deepinsight/insightface" target="_blank" rel="noreferrer">insightface</a>：支持 2D&amp;3D 人脸分析的 Python 库。基于 PyTorch 和 MXNet 实现，采用先进的 ArcFace 人脸识别方法，高效地实现了人脸检测、识别等功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/64/102057483.png" style="max-width:80%;"></p><p>41、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Dod-o/Statistical-Learning-Method_Code" target="_blank" rel="noreferrer">Statistical-Learning-Method_Code</a>：用 Python 实现《统计学习方法》书中的算法</p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub63.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub65.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/64">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,112)]))}const d=i(h,[["render",l]]);export{c as __pageData,d as default};
