import{_ as s,c as a,a2 as t,o as e}from"./chunks/framework.Gf1jShja.js";const k=JSON.parse('{"title":"《HelloGitHub》第 66 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub66.md","filePath":"HelloGitHub66.md"}'),n={name:"HelloGitHub66.md"};function l(h,i,r,p,o,c){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="《hellogithub》第-66-期" tabindex="-1">《HelloGitHub》第 66 期 <a class="header-anchor" href="#《hellogithub》第-66-期" aria-label="Permalink to &quot;《HelloGitHub》第 66 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/66" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/JingYang1124/HEX-LINK" target="_blank" rel="noreferrer">HEX-LINK</a>：自制电脑游戏的体感设备。该项目包含制作时需要的硬件设计和全部源码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>├─firmware # 软件（根据自己使用的工具选择如下一种工程即可）</span></span>
<span class="line"><span>│  ├─ArduinoIDE_Proj # Arduino IDE版工程 </span></span>
<span class="line"><span>│  │  ├─Additional_Libraries # 里面的文件夹需要复制到Arduino IDE安装目录下的libraries文件夹</span></span>
<span class="line"><span>│  │  ├─Hex_Link_Leonardo # 需要下载至接收端的程序</span></span>
<span class="line"><span>│  │  └─Hex_Link_Nano # 需要下载至发送端的程序</span></span>
<span class="line"><span>│  ├─Bootloaders # 需要下载至芯片的arduino bootloader </span></span>
<span class="line"><span>│  └─Vscode_PlatformIO_Proj # VScode PlatformIO版工程 </span></span>
<span class="line"><span>│      ├─Hex_Link_Leonardo # 需要下载至接收端的程序</span></span>
<span class="line"><span>│      └─Hex_Link_Nano # 需要下载至发送端的程序</span></span>
<span class="line"><span>├─hardware # 硬件（PCB工程）</span></span>
<span class="line"><span>│  ├─BOM   # PCB的物料清单，包含参考的购买链接（链接仅作参考，在其他任何店铺购买相同型号即可）</span></span>
<span class="line"><span>│  ├─Hex_Link_Rec # 接收端PCB工程</span></span>
<span class="line"><span>│  ├─Hex_Link_Trans # 发送端PCB工程</span></span>
<span class="line"><span>│  └─Nano_Jtag_Pin # 转接板：用来烧录Nano bootloader的Jtag口转接板</span></span>
<span class="line"><span>├─model # 接收端外壳3维模型</span></span>
<span class="line"><span>│  ├─Solidworks_Project # 2018版本Solidworks工程</span></span>
<span class="line"><span>│  └─STL_TAP # STL文件，可直接用于3D打印.TAP文件是顶层亚克力板的CNC加工文件</span></span>
<span class="line"><span>├─references # 参考文档</span></span>
<span class="line"><span>└─tools # 额外的脚本工具</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/381917789.gif" style="max-width:80%;"></p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nilaoda/BBDown" target="_blank" rel="noreferrer">BBDown</a>：命令行哔哩哔哩视频下载工具</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/282637924.gif" style="max-width:80%;"></p><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/BeyondDimension/SteamTools" target="_blank" rel="noreferrer">SteamTools</a>：集合多种 Steam 客户端工具的工具箱。该工具支持 Window、Linux、macOS、Android 操作系统，包括游戏库存管理、解锁成就、史低价格、出售库存物品等功能，还有丰富的插件等待你发掘</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/321682465.png" style="max-width:80%;"></p><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tencent/xLua" target="_blank" rel="noreferrer">xLua</a>：为 C#、Unity、.Net 等环境增添 Lua 脚本编程的能力，使得 Lua 代码方便地与 C# 相互调用</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>XLua.LuaEnv luaenv = new XLua.LuaEnv();</span></span>
<span class="line"><span>luaenv.DoString(&quot;CS.UnityEngine.Debug.Log(&#39;hello world&#39;)&quot;);</span></span>
<span class="line"><span>luaenv.Dispose();</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/75811015.png" style="max-width:80%;"></p><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/aristocratos/btop" target="_blank" rel="noreferrer">btop</a>：界面酷炫的命令行资源监视器。可以显示处理器、内存、磁盘、网络和进程的使用情况和统计信息，还支持鼠标操作</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/365005377.png" style="max-width:80%;"></p><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Qalculate/libqalculate" target="_blank" rel="noreferrer">libqalculate</a>：使用 C++ 编写的多功能计算器桌面应用、库和 CLI 程序。它易于使用功能强大，支持大型可定制函数库、单位计算和转换、符号计算（包括积分和方程）。作为用户你可以直接在命令行中使用，作为开发者你也可以在自己的项目中使用这个库。官方还制作了 <a href="https://github.com/Qalculate/qalculate-qt" target="_blank" rel="noreferrer">Qt</a> 和 <a href="https://github.com/Qalculate/qalculate-gtk" target="_blank" rel="noreferrer">GTK</a> 两个版本的 GUI 计算器应用</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/60243288.png" style="max-width:80%;"></p><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/qinguoyi/TinyWebServer" target="_blank" rel="noreferrer">TinyWebServer</a>：Linux 下的 C++ 轻量级 Web 服务器。该项目不仅可以用来搭建 Web 服务，也适合 C++ 初学者作为网络编程实战项目。作者还写了文章讲解相关代码和原理，帮助初学者更好的掌握网络编程相关知识</p><h3 id="css-项目" tabindex="-1">CSS 项目 <a class="header-anchor" href="#css-项目" aria-label="Permalink to &quot;CSS 项目&quot;">​</a></h3><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/QiShaoXuan/css_tricks" target="_blank" rel="noreferrer">css_tricks</a>：常用 CSS 样式示例集合</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/149151909.png" style="max-width:80%;"></p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/darjun/go-daily-lib" target="_blank" rel="noreferrer">go-daily-lib</a>：每天学习一个 Go 语言库。内容包含标准库和三方库，每个库对应一篇介绍和上手的文章</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/233408177.png" style="max-width:80%;"></p><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/taoshihan1991/go-fly" target="_blank" rel="noreferrer">go-fly</a>：基于 Go 语言实现的在线客服系统，采用 Gin+MySQL+JWT+WebSocket 等技术栈实现</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/255823049.jpeg" style="max-width:80%;"></p><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/openimsdk/open-im-server" target="_blank" rel="noreferrer">open-im-server</a>：基于 Go 实现的轻量级即时通讯（IM）项目。具有高性能、易扩展、安装简单、私有化部署等特性，同时包含多种客户端 SDK。从服务器到客户端一体的开源即时通讯（IM）解决方案</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/370977430.png" style="max-width:80%;"></p><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/wxbool/video-srt-windows" target="_blank" rel="noreferrer">video-srt-windows</a>：自动识别视频语音生成字幕文件的工具。采用 Go+walk 开发所以仅支持 Windows 系统，原理是请求在线语音转文字的服务，超出免费额度需付费。另外还加入了导出字幕文件和翻译功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/224588420.gif" style="max-width:80%;"></p><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/spf13/viper" target="_blank" rel="noreferrer">viper</a>：用来搞定 Go 应用中配置的库。支持多种配置文件类型、监控并重新加载配置文件、远程读取配置系统等</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetConfigName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置文件名，不包括后缀</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetConfigType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yaml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置文件的后缀</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddConfigPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/appname/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查找配置文件的目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">viper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddConfigPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$HOME/.appname&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 支持查找多个目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 异常处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadInConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _, ok </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err.(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">viper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConfigFileNotFoundError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); ok {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// 如果没有找到配置文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// 找到了配置文件，但出现了其他错误</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/18369373.png" style="max-width:80%;"></p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Javen205/IJPay" target="_blank" rel="noreferrer">IJPay</a>：Java 支付工具库，轻松完成支付模块开发。封装了常用的微信、QQ、支付宝、银联、PayPal 支付等支付方式的各种常用接口。不依赖任何 MVC 框架，轻松接入到 Java 项目</p><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/o2oa/o2oa" target="_blank" rel="noreferrer">o2oa</a>：国产的 OA 系统。功能齐全支持考勤、会议管理、云盘等，适用于企业 OA、协同办公</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/81904468.png" style="max-width:80%;"></p><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/asLody/VirtualApp" target="_blank" rel="noreferrer">VirtualApp</a>：Android 系统的沙盒程序，App 虚拟化引擎。它创建了一个虚拟空间，在那里可以任意安装、启动、控制、卸载应用。虚拟空间与外部隔离相当于沙盒环境，可在安卓上实现应用多开、静默安装等黑科技</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/62722814.png" style="max-width:80%;"></p><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Asabeneh/30-Days-Of-JavaScript" target="_blank" rel="noreferrer">30-Days-Of-JavaScript</a>：30 天 JavaScript 编程挑战。该教程虽然是英文教程但是图文并茂通俗易通，内容循序渐进包含练习题，适合零基础想要学习 JavaScript 的同学</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/229764465.png" style="max-width:80%;"></p><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/airbnb/javascript" target="_blank" rel="noreferrer">javascript</a>：Airbnb 开源的 JavaScript 风格指南。<a href="https://github.com/lin-123/javascript" target="_blank" rel="noreferrer">中文</a></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 采用数组解构</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bad</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> first</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> second</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// good</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr;</span></span></code></pre></div><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/share/sharedb" target="_blank" rel="noreferrer">sharedb</a>：基于 JSON 数据 OT 算法的实时数据库。简单来说就是实时协同数据框架，可用来实现当页面因用户操作发生数据变化时，实时把数据同步展示到其它用户页面上，其中 OT 算法就是解决此协同过程中问题的通用算法。常见的场景比如：多用户之间的状态同步、在线协作文档、离线后数据改动同步等</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/9156525.gif" style="max-width:80%;"></p><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/wuchangming/spy-debugger" target="_blank" rel="noreferrer">spy-debugger</a>：远程调试手机页面和抓包的工具。操作简单仅需手机和电脑在同一个 WIFI 下，即可在实现真机调试页面</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/49316177.png" style="max-width:80%;"></p><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/qier222/YesPlayMusic" target="_blank" rel="noreferrer">YesPlayMusic</a>：高颜值的第三方网易云播放器。它不仅拥有简洁美观的外观，还有丰富的功能</p><ul><li>支持 Windows/macOS/Linux</li><li>私人 FM/每日推荐歌曲</li><li>网易云账号登录</li><li>歌词显示</li><li>自定义快捷键和全局快捷键</li><li>等等</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/302603001.png" style="max-width:80%;"></p><h3 id="kotlin-项目" tabindex="-1">Kotlin 项目 <a class="header-anchor" href="#kotlin-项目" aria-label="Permalink to &quot;Kotlin 项目&quot;">​</a></h3><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/xiaojinzi123/Component" target="_blank" rel="noreferrer">Component</a>：Android 的组件化框架，帮助开发者在实现项目组件化。它的强大在于功能齐全、更新及时，支持 Kotlin、AndroidX、RxJava、协程等</p><h3 id="objective-c-项目" tabindex="-1">Objective-C 项目 <a class="header-anchor" href="#objective-c-项目" aria-label="Permalink to &quot;Objective-C 项目&quot;">​</a></h3><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ChenYilong/iOSInterviewQuestions" target="_blank" rel="noreferrer">iOSInterviewQuestions</a>：iOS 面试题集合（附答案）</p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/zpoint/CPython-Internals" target="_blank" rel="noreferrer">CPython-Internals</a>：图文并茂的 Python 源码阅读笔记项目。阅读的是比较新的 CPython 3.8 版本，重点是项目一直在更新维护</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> take_gil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PyThreadState</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tstate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 忽略 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_Py_atomic_load_relaxed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_PyRuntime.ceval.gil.locked)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    	/* 只要 gil 是锁住的状态, 进入这个循环 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timed_out </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        unsigned</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> saved_switchnum;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        saved_switchnum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _PyRuntime.ceval.gil.switch_number;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* 释放 gil.mutex, 并在以下两种条件下唤醒</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           1. 等待 INTERVAL 微秒(默认 5000) </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           2. 还没有等待到 5000 微秒但是收到了 gil.cond 的信号</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        COND_TIMED_WAIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_PyRuntime.ceval.gil.cond, _PyRuntime.ceval.gil.mutex,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        INTERVAL, timed_out);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* 当前持有 gil.mutex 这把互斥锁 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (timed_out </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            _Py_atomic_load_relaxed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_PyRuntime.ceval.gil.locked) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            _PyRuntime.ceval.gil.switch_number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> saved_switchnum) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            /* 如果超过了等待时间, 并且这段等待时间里 gil 的持有者没有变更过, 则尝试让当前持有 gil 的线程进行释放gil</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            把 gil_drop_request 值设为 1, 持有锁的线程看到这个值的时候, 会尝试放弃 gil */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            SET_GIL_DROP_REQUEST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* 继续回到 while 循环, 检查 gil 是否为锁住状态 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 忽略 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/python/mypy" target="_blank" rel="noreferrer">mypy</a>：Python 静态类型检查库。既然 Python 是一门动态类型语言，为啥还要检查类型呢？有了静态类型检测则无需运行代码，就可以发现程序中潜在的错误。还可以加入到 <code>git hook</code> 中，实现在提交代码前自动检查。详情查看<a href="https://mp.weixin.qq.com/s/K4RGr5NqMFAUKtB0KFPV5g" target="_blank" rel="noreferrer">这篇文章</a></p><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/LazoCoder/Pokemon-Terminal" target="_blank" rel="noreferrer">Pokemon-Terminal</a>：适用于多种终端的口袋妖怪主题工具。支持 iTerm2、ConEmu、Terminology、Windows 的终端，已经收集了 719 个小精灵</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/88655352.gif" style="max-width:80%;"></p><h3 id="rust-项目" tabindex="-1">Rust 项目 <a class="header-anchor" href="#rust-项目" aria-label="Permalink to &quot;Rust 项目&quot;">​</a></h3><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nushell/nushell" target="_blank" rel="noreferrer">nushell</a>：一种更加人性化的新型 shell</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/186024298.gif" style="max-width:80%;"></p><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Clipy/Clipy" target="_blank" rel="noreferrer">Clipy</a>：macOS 的剪贴板扩展应用。支持展示剪贴板历史记录、内容模版等功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/37778564.png" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/MunGell/awesome-for-beginners" target="_blank" rel="noreferrer">awesome-for-beginners</a>：对初学者友好的开源项目集合。如果你想参与到开源项目的建设，可以在这个集合中寻找项目，祝你早日完成第一个贡献（PR）</p><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/rwv/chinese-dos-games" target="_blank" rel="noreferrer">chinese-dos-games</a>：中文 DOS 游戏集合。<a href="https://dos.zczc.cz/" target="_blank" rel="noreferrer">在线试玩</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/146759572.png" style="max-width:80%;"></p><p>31、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/VickScarlet/lifeRestart" target="_blank" rel="noreferrer">lifeRestart</a>：在线文字游戏《人生重开模拟器》。纯文字游戏只需开局选天赋分配初始属性，后面就是看岁月如白驹过隙，转眼就过完了这一生，不满意的话可以轻松重开新的人生。游戏凭借诙谐幽默的文案和出乎意料的结尾，广受好评。<a href="https://liferestart.syaro.io/view/" target="_blank" rel="noreferrer">在线试玩</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/396193750.png" style="max-width:80%;"></p><p>32、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/feiyangqingyun/QWidgetDemo" target="_blank" rel="noreferrer">QWidgetDemo</a>：Qt 编写的示例集合。每个示例都可独立运行、代码简洁易懂，适合初学者学习</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/212790745.gif" style="max-width:80%;"></p><p>33、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/xemu-project/xemu" target="_blank" rel="noreferrer">xemu</a>：免费开源的 Xbox 模拟器，支持 Windows、Linux、macOS 系统</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/241270996.png" style="max-width:80%;"></p><p>34、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/koekeishiya/yabai" target="_blank" rel="noreferrer">yabai</a>：适用于 macOS 的平铺式窗口管理器。该工具可以轻松实现窗口平铺不重叠，不用鼠标仅通过键盘移动、调整、切换、全屏、自动布局等管理窗口的操作</p><ul><li><code>Control+Option+A/D</code>：激活 平铺/浮动 模式</li><li><code>Option+h/j/k/l</code>：使 左/下/上/右 侧窗口成为活动窗口</li><li><code>Shift+Option+h/j/k/l</code>：向 左/下/上/右 移动当前活动窗口</li><li><code>Command+Option+n</code>：创建新桌面，并将当前活动窗口移动至新桌面</li></ul><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/184909163.png" style="max-width:80%;"></p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>35、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/woai3c/introduction-to-front-end-engineering" target="_blank" rel="noreferrer">introduction-to-front-end-engineering</a>：一本小书《带你入门前端工程》。该书是作者对过去两年前端工程化实践的经验和心得总结，<a href="https://woai3c.github.io/introduction-to-front-end-engineering/" target="_blank" rel="noreferrer">在线阅读</a></p><p>36、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/datawhalechina/pumpkin-book" target="_blank" rel="noreferrer">pumpkin-book</a>：《机器学习公式详解》西瓜书公式推导解析。<a href="https://datawhalechina.github.io/pumpkin-book/" target="_blank" rel="noreferrer">在线阅读</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/162783195.png" style="max-width:80%;"></p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>37、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tencent/GameAISDK" target="_blank" rel="noreferrer">GameAISDK</a>：基于图像识别的 AI 自动化框架，支持吃鸡类、射击类、MOBA 类等游戏类型。内置多种图像识别算法和 AI 算法，不用抠图完全基于图像识别的 AI 训练和框架</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/287203686.png" style="max-width:80%;"></p><p>38、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/IrisRainbowNeko/genshin_auto_fish" target="_blank" rel="noreferrer">genshin_auto_fish</a>：基于深度学习的原神手游自动钓鱼工具。其中用 YOLOX 搞定鱼的定位和类型的识别以及鱼竿落点的定位，用 DQN 搞定自适应控制钓鱼过程的点击，让力度落在最佳区域内</p><p>39、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/guanshuicheng/invoice" target="_blank" rel="noreferrer">invoice</a>：增值税发票 OCR 识别项目。包含训练好的模型和微服务，启动后可直接通过接口调用</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/66/200155602.png" style="max-width:80%;"></p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub65.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub67.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/66">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,107)]))}const d=s(n,[["render",l]]);export{k as __pageData,d as default};
