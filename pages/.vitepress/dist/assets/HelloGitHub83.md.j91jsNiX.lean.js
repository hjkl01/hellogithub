import{_ as i,c as a,a2 as t,o as h}from"./chunks/framework.Gf1jShja.js";const d=JSON.parse('{"title":"《HelloGitHub》第 83 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub83.md","filePath":"HelloGitHub83.md"}'),n={name:"HelloGitHub83.md"};function l(e,s,p,k,r,g){return h(),a("div",null,s[0]||(s[0]=[t(`<h1 id="《hellogithub》第-83-期" tabindex="-1">《HelloGitHub》第 83 期 <a class="header-anchor" href="#《hellogithub》第-83-期" aria-label="Permalink to &quot;《HelloGitHub》第 83 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/83" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/antirez/sds" target="_blank" rel="noreferrer">sds</a>：简单的 C 语言动态字符串库。Redis 作者写的 C 语言字符串库，它相较于 C 字符串，使用起来更加方便。具有速度快(常数复杂度获取字符串长度)、二进制安全(图片、音频等)、兼容部分 C 字符串函数等特点。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sds mystring </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sdsnew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mystring);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sdsfree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mystring);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Hello World</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span></span></code></pre></div><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/aleksey-hoffman/sigma-file-manager" target="_blank" rel="noreferrer">sigma-file-manager</a>：一款先进的文件管理器。这是一款免费的文件管理器，由开源社区维护。支持智能搜索、自定义主页、文件共享、文件下载、智能拖放、文件保护等功能，适用于 Windows 和 Linux。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/370679811.png" style="max-width:80%;"></p><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/tsl0922/ttyd" target="_blank" rel="noreferrer">ttyd</a>：简单的网络共享终端的命令行工具。基于 libuv 和 WebGL2 构建的 Web 共享终端工具，安装简单使用方便，支持 SSL、文件传输、Sixel 图像输出等功能。可运行在 Windows、macOS、Linux、OpenWrt 等操作系统上，适用于远程运维、在线管理设备等场景。来自 <a href="https://hellogithub.com/user/i1wAIyo6P3NXkxm" target="_blank" rel="noreferrer">@孤胆枪手</a> 的分享</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/68063511.gif" style="max-width:80%;"></p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jenius-apps/ambie" target="_blank" rel="noreferrer">ambie</a>：Windows 上的白噪声应用。一款播放白噪声和自然声音的应用，比如下雨、海滩等声音，支持混合、在线下载声音和专注功能。工作时使用可以帮助你集中注意力，还能在放松时使用有助于睡眠。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/309191418.png" style="max-width:80%;"></p><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/felixse/FluentTerminal" target="_blank" rel="noreferrer">FluentTerminal</a>：炫酷的 Windows 终端软件。基于 UWP 的 Windows 终端应用，拥有强大的自定义主题模块，能够轻松定制出风格各异的主题。提供了中文选项，支持多窗口、SSH 和搜索等功能。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/118322286.png" style="max-width:80%;"></p><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/gerardog/gsudo" target="_blank" rel="noreferrer">gsudo</a>：适用于 Windows 的 sudo 命令行工具。它是 Windows 上的 sudo，允许用户以最高权限运行命令，拥有与 Unix/Linux sudo 类似的使用体验，支持 CMD、PowerShell、git-bash 等。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/220251820.gif" style="max-width:80%;"></p><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Slackadays/Clipboard" target="_blank" rel="noreferrer">Clipboard</a>：小巧便捷的命令行剪贴板。一款用 C++ 编写的剪贴板工具，可以在终端的任何地方复制、剪切和粘贴东西，使用起来就像 GUI 一样方便，相见恨晚的命令行工具，适用于 Windows、Linux 和 macOS 操作系统。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/568268698.png" style="max-width:80%;"></p><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/doctest/doctest" target="_blank" rel="noreferrer">doctest</a>：超快的 C++ 单头文件测试框架。这是一款轻量级、快速的 C++ 测试框架，它使用起来十分方便，引入头文件即可使用，而且速度快、编译时间短，支持 C++ 11/14/17/20。</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;doctest.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TEST_CASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;testing the factorial function&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CHECK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CHECK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CHECK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CHECK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factorial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3628800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/22660515.gif" style="max-width:80%;"></p><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/pocketpy/pocketpy" target="_blank" rel="noreferrer">pocketpy</a>：为嵌入游戏引擎而设计的 Python 解释器。一个 C++ 实现的轻量级的 Python 解释器，包含一个编译器和基于字节码的虚拟机，以及交互式命令窗的实现。所有功能均集成在单个头文件 pocketpy.h 中，不包含外部依赖项可以很方便地嵌入应用，立刻拥有执行 Python 代码的能力。来自 <a href="https://hellogithub.com/user/GvV4jfIDhMEUO5x" target="_blank" rel="noreferrer">@最大的梦想家</a> 的分享</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pocketpy.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 创建一个虚拟机</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    VM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pkpy_new_vm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Hello world!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pkpy_vm_exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;print(&#39;Hello world!&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 构建一个列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pkpy_vm_exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a = [1, 2, 3]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 对列表进行求和</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pkpy_vm_eval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sum(a)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 释放资源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pkpy_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    pkpy_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/562353733.png" style="max-width:80%;"></p><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/qgis/QGIS" target="_blank" rel="noreferrer">QGIS</a>：自由开源的桌面 GIS 软件。该项目采用 C++ 语言编写，GUI 部分使用的是 Qt 库。它提供了 GIS 数据可视化、编辑和分析的功能，支持多种 GIS 数据格式，适用于 Windows、Linux、macOS、BSD 和移动设备。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/1690480.png" style="max-width:80%;"></p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dragonflyoss/Dragonfly2" target="_blank" rel="noreferrer">Dragonfly2</a>：一款基于 P2P 的智能镜像和文件分发工具。它提供了高效、稳定、安全的基于 P2P 技术的文件分发和镜像加速系统，能够提高大规模文件传输的效率和速率，最大限度地利用网络带宽，适用于应用分发、缓存分发、日志分发和镜像分发等领域。来自 <a href="https://hellogithub.com/user/Jn3TOfINLBjmQUS" target="_blank" rel="noreferrer">@Gaius</a> 的分享</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/309874357.jpg" style="max-width:80%;"></p><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/bojand/ghz" target="_blank" rel="noreferrer">ghz</a>：简单的 gRPC 压测工具。一款用 Go 开发的专门用来压测 gRPC 服务的命令行工具，它使用简单、高效、支持自定义参数。来自 <a href="https://hellogithub.com/user/4nvWkqTsd3LhXKm" target="_blank" rel="noreferrer">@禹过留声</a> 的分享</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/125127188.png" style="max-width:80%;"></p><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/imroc/req" target="_blank" rel="noreferrer">req</a>：带黑魔法的 Go HTTP 客户端。该库默认就很智能，比如自动解码成 UTF-8 以避免乱码、根据 Content-Type 自动解析响应、自动检测服务器端并选择最优的 HTTP 协议、自动重试等，除此之外还提供了强大且便捷的调试功能。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/imroc/req/v3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    req.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DevMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Treat the package name as a Client, enable development mode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    req.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MustGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://httpbin.org/uuid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Treat the package name as a Request, send GET request.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    req.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnableForceHTTP1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Force using HTTP/1.1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    req.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MustGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://httpbin.org/uuid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/83145406.png" style="max-width:80%;"></p><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/sqlc-dev/sqlc" target="_blank" rel="noreferrer">sqlc</a>：将 SQL 转成类型安全的 Go 代码的工具。它可以将输入的 SQL 语句，自动转化成类型安全、可读的操作数据库的 Go 代码，支持 MySQL、PostgreSQL 和 SQLite 数据库。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/193160679.png" style="max-width:80%;"></p><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/talent-plan/tinykv" target="_blank" rel="noreferrer">tinykv</a>：构建分布式 Key-Value 数据库的教程。介绍了如何用 Go 语言实现一个高可用、可水平扩展、支持分布式事务的键-值存储服务。</p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/atomashpolskiy/bt" target="_blank" rel="noreferrer">bt</a>：一个 Java 的 BitTorrent 库。支持 DHT、磁力链接、加密等功能的 Java 库，可以根据自己的喜好开发和定制 BT 工具，比如播种、下载种子等。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create a torrent</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path torrentRoot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/torrents/mytorrent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path file1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/torrents/mytorrent/file1.bin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path file2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/torrents/mytorrent/file2.bin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path dirToAdd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/torrents/mytorrent/dir_with_files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] torrentBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TorrentBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(torrentRoot)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file1, file2, dirToAdd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">announce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://example.com/announce&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/home/torrents/mytorrent.torrent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), torrentBytes);</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/58881448.gif" style="max-width:80%;"></p><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/RoaringBitmap/RoaringBitmap" target="_blank" rel="noreferrer">RoaringBitmap</a>：更好用的 Java 压缩位图数据结构。位图常用于大数据集的快速查找和去重，该项目提供的 RoaringBitmap 是一种压缩位图，相较于传统的位图数据结构，它更快、更节省内存，而且久经沙场值得信赖，比如 Spark、Hive 等知名项目上都有它的身影。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> org.roaringbitmap.RoaringBitmap;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        RoaringBitmap rr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoaringBitmap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bitmapOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        RoaringBitmap rr2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RoaringBitmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rr2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4000L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4255L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// would return the third value or 1000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rank</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// would return the rank of 2, which is index 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// will return true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// will return false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        RoaringBitmap rror </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoaringBitmap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rr, rr2);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// new bitmap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rr2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//in-place computation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> equals </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rror.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rr);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">equals) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RuntimeException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // number of values stored?</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cardinality </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLongCardinality</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cardinality);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // a &quot;forEach&quot; is faster than this loop, but a loop is possible:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rr) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Chanzhaoyu/chatgpt-web" target="_blank" rel="noreferrer">chatgpt-web</a>：一款可自定义 API 的 ChatGPT 演示网页。基于 Express 和 Vue3 构建的 GPT-3 模型演示网页，支持接入 GPT-3 API 或网页 ChatGPT。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/599394820.png" style="max-width:80%;"></p><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/illacloud/illa-builder" target="_blank" rel="noreferrer">illa-builder</a>：一款灵活、清秀的低代码平台。由国内团队开源的低代码平台，它更新积极、处理反馈及时。功能上内置图表、表格、表单等数十种常用组件，直接拖拽即可使用。还支持 GUI 连接数据库或 API，分分钟构建出企业内部应用，支持在线、云服务和 Docker 本地部署多种使用方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/482719022.gif" style="max-width:80%;"></p><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/usememos/memos" target="_blank" rel="noreferrer">memos</a>：一款清爽的轻量级备忘录中心。这是一个采用 React+Tailwind+TypeScript+Go 开发的备忘录中心，相当于极简的微博。支持私有/公开备忘录、标签、互动式日历等功能，以及 Docker 部署。来自 <a href="https://hellogithub.com/user/J6BeoT2SX1CUApN" target="_blank" rel="noreferrer">@Yoshino-s</a> 的分享</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> memos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5230:5230</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.memos/:/var/opt/memos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> neosmemo/memos:latest</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/436297812.jpg" style="max-width:80%;"></p><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/gildas-lormeau/SingleFile" target="_blank" rel="noreferrer">SingleFile</a>：用于网页存档的浏览器扩展。可实现一键下载网页，能够将网页上的文字、图片等内容，完整地整合到单个 HTML 文件里，支持 Chrome、Firefox、Safari、Microsoft Edge 等主流浏览器。来自 <a href="https://hellogithub.com/user/iZ4HE13VS5c97Ol" target="_blank" rel="noreferrer">@DarkBlue</a> 的分享</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/906022.gif" style="max-width:80%;"></p><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/google/zx" target="_blank" rel="noreferrer">zx</a>：Bash 很好但我选择用 JavaScript 写脚本。实现用 JavaScript 写 shell 脚本的工具，支持 cd、fetch、within 等函数，无需引入就可以使用 fs、os、yaml 等库。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env zx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--show-current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--branch=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">await</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Promise.all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;foo bar&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span></span></code></pre></div><h3 id="kotlin-项目" tabindex="-1">Kotlin 项目 <a class="header-anchor" href="#kotlin-项目" aria-label="Permalink to &quot;Kotlin 项目&quot;">​</a></h3><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/Ashinch/ReadYou" target="_blank" rel="noreferrer">ReadYou</a>：一款 Material 风格的 Android RSS 阅读器。界面简洁清爽的 RSS 阅读器，支持订阅 RSS 链接、更新通知、沉浸式阅读等功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/464981831.png" style="max-width:80%;"></p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/edgedb/edgedb" target="_blank" rel="noreferrer">edgedb</a>：一款采用图-关系模型的新型开源数据库。一个底层由 PostgreSQL 提供支持的开源数据库，在兼容关系数据库特性的同时，结合了 ORM 的声明模式和 GraphQL 式的深度查询。自带 WebUI 界面，支持在线编辑数据、查询、关系可视化等功能。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>type Person {</span></span>
<span class="line"><span>  required property name -&gt; str;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>type Movie {</span></span>
<span class="line"><span>  required property title -&gt; str;</span></span>
<span class="line"><span>  multi link actors -&gt; Person;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/95817032.jpg" style="max-width:80%;"></p><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/srsudar/eg" target="_blank" rel="noreferrer">eg</a>：常用的 Linux 命令示例查询工具。它提供了 Linux 命令的常见用法，不仅使用方便而且示例简洁实用。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/31691072.gif" style="max-width:80%;"></p><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/ManimCommunity/manim" target="_blank" rel="noreferrer">manim</a>：用于创建数学动画的 Python 框架。它可以用简单的代码制作出精美的数学动画，通过动画的方式直观地解释一些复杂的数学问题。来自 <a href="https://hellogithub.com/user/1qC4w2Ey6bu0fgR" target="_blank" rel="noreferrer">@databook</a> 的分享</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> manim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SquareToCircle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> construct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        circle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Circle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        square </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Square()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        square.flip(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RIGHT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        square.rotate(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TAU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        circle.set_fill(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PINK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">opacity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.play(Create(square))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.play(Transform(square, circle))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.play(FadeOut(square))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行：manim -p -ql example.py SquareToCircle</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/265122478.png" style="max-width:80%;"></p><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/thomasahle/sunfish" target="_blank" rel="noreferrer">sunfish</a>：100 多行代码的 Python 国际象棋引擎。一个仅用 Python 标准库和 131 行代码实现的命令行国际象棋游戏。它注释丰富结构清晰，核心代码由国际象棋逻辑、策略搜索和用户界面三个部分组成。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/16690938.png" style="max-width:80%;"></p><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/refraction-ray/xalpha" target="_blank" rel="noreferrer">xalpha</a>：Python 写的基金投资管理回测引擎。该项目可以获取基金的信息与净值，支持精确到分的投资账户记录整合、分析和可视化，简单的策略回测以及根据预设策略的定时投资提醒，适合资金反复进出的定投型和网格型投资者。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jiaoyidan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xa.record(path) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 额外一行先读入 path 处的 csv 账单</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shipan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xa.mul(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jiaoyidan) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Let&#39;s rock</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shipan.summary() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 看所有基金总结效果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shipan.get_stock_holdings() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看底层等效股票持仓</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/143284193.png" style="max-width:80%;"></p><h3 id="rust-项目" tabindex="-1">Rust 项目 <a class="header-anchor" href="#rust-项目" aria-label="Permalink to &quot;Rust 项目&quot;">​</a></h3><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/LemmyNet/lemmy" target="_blank" rel="noreferrer">lemmy</a>：Rust 写的链接聚合论坛。该项目基于 Rust 的 Web 框架 Actix 和 Diesel ORM 库构建，它是一个类似 Hacker News 的网站，用户可以在上面订阅感兴趣的话题、发布链接、讨论和投票。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/170729130.jpg" style="max-width:80%;"></p><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/o2sh/onefetch" target="_blank" rel="noreferrer">onefetch</a>：查看 Git 仓库信息的命令行工具。一款由 Rust 编写的命令行查看 Git 信息的工具，它可以直接在终端中展示本地 Git 仓库的详细信息，比如开源协议、提交次数、代码统计等信息。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/148829497.png" style="max-width:80%;"></p><p>31、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/microsoft/windows-rs" target="_blank" rel="noreferrer">windows-rs</a>：Rust 调用 Windows API 的库。由微软开源的 Rust 库，为 Rust 开发人员调用 Windows API 提供了方便，极大地改善了 Rust 语言在 Windows 系统上的开发条件。</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> windows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    core</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Xml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Win32</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Foundation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Win32</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Threading</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Win32</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WindowsAndMessaging</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;()&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> doc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XmlDocument</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoadXml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;html&gt;hello world&lt;/html&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> root </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DocumentElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    assert!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NodeName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    assert!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InnerText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    unsafe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreateEventW</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        SetEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ok</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        WaitForSingleObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        CloseHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ok</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        MessageBoxA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Ansi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Caption&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MB_OK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        MessageBoxW</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">w!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Wide&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">w!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Caption&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MB_OK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>32、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jtrivedi/Wave" target="_blank" rel="noreferrer">Wave</a>：轻松实现丝滑动画的 Swift 库。用于 iOS 和 macOS 的动画引擎库，可以轻松创建流畅、感觉很棒的动画。它没有外部依赖，可以很容易地引入进基于 UIKit、SwiftUI 或 AppKit 的项目。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> panGestureRecognizer.state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .ended {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Create a spring with some bounciness. \`response\` affects the animation&#39;s duration.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> animatedSpring </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dampingRatio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.68</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Get the gesture&#39;s lift-off velocity, and pass it into the Wave animation.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gestureVelocity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> panGestureRecognizer.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">velocity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Wave.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">withSpring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: animatedSpring, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gestureVelocity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: gestureVelocity) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Update animatable properties on the view&#39;s \`animator\` property, _not_ the view itself.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pipView.animator.center </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipViewDestination     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Some target CGPoint that you calculate.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pipView.animator.scale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CGPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/498385616.gif" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>33、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/woltapp/blurhash" target="_blank" rel="noreferrer">blurhash</a>：开源的图片占位符算法和实现。该算法可将图片编码成一段仅 20-30 个字符的短字符串，解码后可展示一张基于原图的占位图，从而提升用户的访问体验。官方提供了 C、Swift、TypeScript 等编程语言的实现，除此之外还有丰富的第三方库。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/193885464.png" style="max-width:80%;"></p><p>34、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/lmarzen/esp32-weather-epd" target="_blank" rel="noreferrer">esp32-weather-epd</a>：自制电子墨水屏的天气显示器。这是由一块支持 WiFi 的 ESP32 单片机和一个 7.5 英寸电子墨水屏组成的天气显示器。它能够展示通过 API 获得的天气实况和预报，以及传感器提供的室内温度和湿度。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/467381275.jpg" style="max-width:80%;"></p><p>35、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/localsend/localsend" target="_blank" rel="noreferrer">localsend</a>：AirDrop 的开源替代方案。可以通过本地网络与附近的设备，安全地共享文件和消息，此过程不需要互联网，不需要外部服务器，支持 Windows、Linux、macOS、Android、iOS 设备。来自 <a href="https://hellogithub.com/user/i1wAIyo6P3NXkxm" target="_blank" rel="noreferrer">@孤胆枪手</a> 的分享</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/578822531.png" style="max-width:80%;"></p><p>36、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/snowie2000/mactype" target="_blank" rel="noreferrer">mactype</a>：美化 Windows 字体的工具。一款 Windows 字体美体工具，可以解决 Windows 字体虚化的问题，实现类似苹果 macOS 系统的字体渲染效果，安装简单效果惊人。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/33294473.jpg" style="max-width:80%;"></p><p>37、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/raft/raft.github.io" target="_blank" rel="noreferrer">raft.github.io</a>：一个关于 Raft 共识算法的网站。该网站收录了关于 Raft 的论文、课程、书籍等资料，以及相关开源项目和 Raft 的运行情况可视化，帮你彻底搞懂 Raft。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/13816796.gif" style="max-width:80%;"></p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>38、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/algorithmica-org/algorithmica" target="_blank" rel="noreferrer">algorithmica</a>：《现代硬件的算法》。该书来自俄罗斯非营利性的教育组织 Tinkoff Generation，它培养了大约一半的俄罗斯奥林匹克信息学决赛选手。不管你是算法研究员还是学生，这本书都可以让你学到更多提升程序性能的实用方法。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/333536823.jpg" style="max-width:80%;"></p><p>39、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/google/comprehensive-rust" target="_blank" rel="noreferrer">comprehensive-rust</a>：《Comprehensive Rust》为期四天的 Rust 课程。这是谷歌 Android 团队使用的 Rust 课程，它涵盖了 Rust 的基本语法到高级主题，如泛型和错误处理，还包括最后一天的 Android 特定内容。</p><p>40、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/rougier/scientific-visualization-book" target="_blank" rel="noreferrer">scientific-visualization-book</a>：《科学可视化：Python+Matplotlib》。这是一本关于使用 Python 和 Matplotlib 进行科学可视化的开源书籍。该书分为四个部分：第一部分 Matplotlib 库的基本原理，第二部分致力于实战开发，第三部分是更高级的概念，即 3D 图形、优化和动画，第四部分是展示集合。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/202693400.png" style="max-width:80%;"></p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>41、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/replicate/cog" target="_blank" rel="noreferrer">cog</a>：将机器学习模型打包到容器的工具。可通过配置将机器学习模型所需的环境和依赖，自动打包到容器里方便部署，让你不再为编写 Docker 文件和 CUDA 而痛苦，还能自动启动 HTTP 接口服务方便调用。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cog</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-colorization-model</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Building</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Built</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-colorization-model:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5000:5000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --gpus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-colorization-model</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:5000/predictions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;input&quot;: {&quot;image&quot;: &quot;https://.../input.jpg&quot;}}&#39;</span></span></code></pre></div><p>42、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">stable-diffusion-webui</a>：Stable Diffusion 模型的 WebUI 界面。这是一个实现在浏览器上使用的 Stable Diffusion 模型的项目，支持通过文本/图片生成图片、嵌入文本、调整图片大小等功能。来自 <a href="https://hellogithub.com/user/i1wAIyo6P3NXkxm" target="_blank" rel="noreferrer">@孤胆枪手</a> 的分享</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img3/master/hellogithub/83/527591471.png" style="max-width:80%;"></p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub82.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub84.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/83">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,121)]))}const o=i(n,[["render",l]]);export{d as __pageData,o as default};
