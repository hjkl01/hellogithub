import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const d=JSON.parse('{"title":"《HelloGitHub》第 72 期","description":"","frontmatter":{},"headers":[],"relativePath":"HelloGitHub72.md","filePath":"HelloGitHub72.md"}'),n={name:"HelloGitHub72.md"},e=t(`<h1 id="《hellogithub》第-72-期" tabindex="-1">《HelloGitHub》第 72 期 <a class="header-anchor" href="#《hellogithub》第-72-期" aria-label="Permalink to &quot;《HelloGitHub》第 72 期&quot;">​</a></h1><blockquote><p>兴趣是最好的老师，<strong>HelloGitHub</strong> 让你对编程感兴趣！</p></blockquote><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg" style="max-width:100%;"></p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p>点击右上角的 <strong>「目录」</strong> 图标打开目录，获得更好的阅读体验。</p><p><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png" alt=""></p><p><strong>Tips</strong>：如果遇到图片刷不出来的情况，<a href="https://hellogithub.com/periodical/volume/72" target="_blank" rel="noreferrer">点击</a> 换一种浏览方式。</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png" style="max-width:30%;"><br> 关注「HelloGitHub」公众号，第一时间收到推送 </p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><blockquote><p><strong>以下为本期内容</strong>｜每个月 <strong>28</strong> 号更新</p></blockquote><h3 id="c-项目" tabindex="-1">C 项目 <a class="header-anchor" href="#c-项目" aria-label="Permalink to &quot;C 项目&quot;">​</a></h3><p>1、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/hashcat/hashcat" target="_blank" rel="noreferrer">hashcat</a>：一款强大的密码恢复工具。破解速度超快支持多种算法，适用于 Linux、macOS 和 Windows 操作系统</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>安装：brew install hashcat</span></span>
<span class="line"><span>常用参数：</span></span>
<span class="line"><span>-a  指定破解模式：“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击</span></span>
<span class="line"><span>-m  指定要破解的 hash 类型：默认为 MD5</span></span>
<span class="line"><span>--force 忽略破解过程中的警告</span></span>
<span class="line"><span></span></span>
<span class="line"><span>常用破解模式：</span></span>
<span class="line"><span>0：Straight（字典破解）</span></span>
<span class="line"><span>1：Combination（组合破解）</span></span>
<span class="line"><span>3：Brute-force（掩码暴力破解）</span></span>
<span class="line"><span>6：Hybrid Wordlist + Mask（字典+掩码破解）</span></span>
<span class="line"><span>7：Hybrid Mask + Wordlist（掩码+字典破解）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>常用掩码设置：</span></span>
<span class="line"><span>l：纯小写字母 abcdefghijklmnopqrstuvwxyz</span></span>
<span class="line"><span>u：纯大写字母 ABCDEFGHIJKLMNOPQRSTUVWXYZ</span></span>
<span class="line"><span>d：纯数字 0123456789</span></span>
<span class="line"><span></span></span>
<span class="line"><span>举例：破解 8 位数字密码</span></span>
<span class="line"><span>hashcat -a 3 -m 0 --force 0D7002A70CCDE8BF4BA2A4A5572A85E9(密码md5字符串) ?l?l?l?l?l?l?l?l?l?l?l（11 位密码的掩码）</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/47409672.png" style="max-width:80%;"></p><p>2、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nelhage/reptyr" target="_blank" rel="noreferrer">reptyr</a>：能够把旧终端运行中的程序，迁移到新终端窗口的实用工具</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/1252864.png" style="max-width:80%;"></p><h3 id="c-项目-1" tabindex="-1">C# 项目 <a class="header-anchor" href="#c-项目-1" aria-label="Permalink to &quot;C# 项目&quot;">​</a></h3><p>3、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/emoacht/Monitorian" target="_blank" rel="noreferrer">Monitorian</a>：轻松调节多个显示器亮度的 Windows 桌面工具。操作界面支持中文，使用时显示器需要开启 DDC/CI</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/79386660.png" style="max-width:80%;"></p><p>4、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/yiyungent/PluginCore" target="_blank" rel="noreferrer">PluginCore</a>：适用于 ASP.NET Core 的轻量级插件框架。开箱即用自带插件管理 Web 界面</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConfigureServices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IServiceCollection</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 1. Add PluginCore</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddPluginCore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IApplicationBuilder</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IWebHostEnvironment</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 2. Use PluginCore</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UsePluginCore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/393686145.png" style="max-width:80%;"></p><h3 id="c-项目-2" tabindex="-1">C++ 项目 <a class="header-anchor" href="#c-项目-2" aria-label="Permalink to &quot;C++ 项目&quot;">​</a></h3><p>5、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/idealvin/coost" target="_blank" rel="noreferrer">coost</a>：在 C++ 上实现类似 Go goroutine 的库。它实现了协程同步事件、协程锁、协程池、channel、waitgroup，内存占用少实测 1000 万协程占用 2.8G 内存</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;co/co.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DEF_main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(argc, argv) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    co</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Chan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;int&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ch;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]() {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /* capture by value, rather than reference */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LOG </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;v: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="css-项目" tabindex="-1">CSS 项目 <a class="header-anchor" href="#css-项目" aria-label="Permalink to &quot;CSS 项目&quot;">​</a></h3><p>6、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/adamschwartz/log" target="_blank" rel="noreferrer">log</a>：浏览器 console.log 风格的 CSS 库。<a href="https://adamschwartz.co/log/" target="_blank" rel="noreferrer">查看效果</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/9401692.png" style="max-width:80%;"></p><h3 id="go-项目" tabindex="-1">Go 项目 <a class="header-anchor" href="#go-项目" aria-label="Permalink to &quot;Go 项目&quot;">​</a></h3><p>7、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/go-gota/gota" target="_blank" rel="noreferrer">gota</a>：Go 语言的数据处理库。该库提供了类似 Python 语言 Pandas 库的功能，以及 Series 和 DataFrames 的数据结构，支持用列的方式高效地处理数据</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Name     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Age      </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Accuracy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">users </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Aram&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Juan&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Ana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dataframe.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoadStructs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(users)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(df)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Output:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [3x3] DataFrame</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     Name     Age   Accuracy</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  0: Aram     17    0.200000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  1: Juan     18    0.800000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  2: Ana      22    0.500000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &lt;string&gt; &lt;int&gt; &lt;float&gt;</span></span></code></pre></div><p>8、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/go-ego/gse" target="_blank" rel="noreferrer">gse</a>：Go 的高性能多语言分词库。它是结巴分词的 Go 语言实现，支持中文和接入 ES 等功能</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;《复仇者联盟3：无限战争》是全片使用IMAX摄影机拍摄制作的的科幻片.&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// use DAG and HMM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hmm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> seg.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cut</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cut use hmm: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hmm)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// cut use hmm:  [《复仇者联盟3：无限战争》 是 全片 使用 imax 摄影机 拍摄 制作 的 的 科幻片 .]</span></span></code></pre></div><p>9、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/real-web-world/hh-lol-prophet" target="_blank" rel="noreferrer">hh-lol-prophet</a>：英雄联盟对局先知工具。免费合法不封号，原理是基于 LOL 客户端接口获取用户数据，实现开局前对玩家信息分析和打分</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/460053762.png" style="max-width:80%;"></p><p>10、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/syncsynchalt/illustrated-tls12" target="_blank" rel="noreferrer">illustrated-tls12</a>：图解 TLS 连接。用在线交互的方式讲解 TLS 的全过程，从建立 TLS 1.2 客户端发送 ping 再到接收 pong，详细到每一个字节。<a href="https://tls.ulfheim.net/" target="_blank" rel="noreferrer">在线尝试</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/151671321.png" style="max-width:80%;"></p><h3 id="java-项目" tabindex="-1">Java 项目 <a class="header-anchor" href="#java-项目" aria-label="Permalink to &quot;Java 项目&quot;">​</a></h3><p>11、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/LSPosed/LSPosed" target="_blank" rel="noreferrer">LSPosed</a>：运行于 Android 操作系统的钩子框架。支持 Android 8 以上，能够拦截几乎所有 Java 函数的调用，从而可被用来修改 Android 系统和软件的功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/320785435.png" style="max-width:80%;"></p><p>12、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/supertokens/supertokens-core" target="_blank" rel="noreferrer">supertokens-core</a>：开源的身份验证方案。为你的应用轻松增加登录、会话管理等功能，支持自行搭建服务。可用作 Auth0 的开源替代品</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/231921809.png" style="max-width:80%;"></p><h3 id="javascript-项目" tabindex="-1">JavaScript 项目 <a class="header-anchor" href="#javascript-项目" aria-label="Permalink to &quot;JavaScript 项目&quot;">​</a></h3><p>13、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/didi/chameleon" target="_blank" rel="noreferrer">chameleon</a>：一端所见即多端所见。适应不同环境的跨端整体解决方案，支持 Web、小程序、快应用 等平台</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/166419150.gif" style="max-width:80%;"></p><p>14、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/frappe/charts" target="_blank" rel="noreferrer">charts</a>：简单、零依赖、响应式的 SVG 图表库</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    labels: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;12am-3am&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3am-6pm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;6am-9am&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9am-12am&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;12pm-3pm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3pm-6pm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;6pm-9pm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9am-12am&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    datasets: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Some Data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, chartType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            values: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">52</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> frappe.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Chart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#chart&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or a DOM element,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // new Chart() in case of ES6 module with above usage</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My Awesome Chart&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data: data,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;axis-mixed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or &#39;bar&#39;, &#39;line&#39;, &#39;scatter&#39;, &#39;pie&#39;, &#39;percentage&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    colors: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#7cd6fd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#743ee2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/108395495.gif" style="max-width:80%;"></p><p>15、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/alexfoxy/lax.js" target="_blank" rel="noreferrer">lax.js</a>：用于滚动时创建平滑和好看动画的库。简单轻量仅 4KB 大小，但功能齐全且灵活</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- JS --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onload</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lax.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Add a driver that we use to control our animations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lax.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addDriver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;scrollY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.scrollY</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Add animation bindings to elements</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lax.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addElements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.selector&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scrollY: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        translateX: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;elInY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;elCenterY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;elOutY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;screenWidth/2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;screenWidth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- HTML --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;selector&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/175176201.gif" style="max-width:80%;"></p><p>16、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/hakimel/reveal.js" target="_blank" rel="noreferrer">reveal.js</a>：一款 HTML 演示框架。让你摆脱传统死板的 PPT 制作方法，可以方便地使用 HTML、Markdown 语言制作 PPT</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/1861458.gif" style="max-width:80%;"></p><p>17、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jamiebuilds/tinykeys" target="_blank" rel="noreferrer">tinykeys</a>：极小的键盘事件监听库</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tinykeys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tinykeys&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinykeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window, {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;Shift+D&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;The &#39;Shift&#39; and &#39;d&#39; keys were pressed at the same time&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;y e e t&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;The keys &#39;y&#39;, &#39;e&#39;, &#39;e&#39;, and &#39;t&#39; were pressed in order&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;$mod+KeyD&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Either &#39;Control+d&#39; or &#39;Meta+d&#39; were pressed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="kotlin-项目" tabindex="-1">Kotlin 项目 <a class="header-anchor" href="#kotlin-项目" aria-label="Permalink to &quot;Kotlin 项目&quot;">​</a></h3><p>18、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/vitaviva/compose-tetris" target="_blank" rel="noreferrer">compose-tetris</a>：基于 Jetpack Compose 的俄罗斯方块游戏</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/354306491.gif" style="max-width:80%;"></p><h3 id="objective-c-项目" tabindex="-1">Objective-C 项目 <a class="header-anchor" href="#objective-c-项目" aria-label="Permalink to &quot;Objective-C 项目&quot;">​</a></h3><p>19、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/listenzz/HBDNavigationBar" target="_blank" rel="noreferrer">HBDNavigationBar</a>：自定义 UINavigationBar 的组件，用于各种状态之间平滑切换</p><h3 id="python-项目" tabindex="-1">Python 项目 <a class="header-anchor" href="#python-项目" aria-label="Permalink to &quot;Python 项目&quot;">​</a></h3><p>20、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/lxgr-linux/pokete" target="_blank" rel="noreferrer">pokete</a>：运行在终端里的口袋妖怪类游戏。虽然游戏图像采用简单的 ASCII 码构建，但商店、小精灵、对战等功能一应俱全</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>运行方法：</span></span>
<span class="line"><span># pip install scrap_engine</span></span>
<span class="line"><span>$ git clone https://github.com/lxgr-linux/pokete.git</span></span>
<span class="line"><span>$ ./pokete/pokete.py</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/331361562.png" style="max-width:80%;"></p><p>21、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/danielgatis/rembg" target="_blank" rel="noreferrer">rembg</a>：简单实用的删除图像背景/抠图工具</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rembg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> remove</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PIL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Image</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;input.png&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;output.png&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Image.open(input_path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> remove(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output.save(output_path)</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/286500101.png" style="max-width:80%;"></p><p>22、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/saleor/saleor" target="_blank" rel="noreferrer">saleor</a>：用 Python 开发的电商平台。采用 Django+GraphQL API+React 构建，功能丰富支持移动端、订单、商品、用户管理等。<a href="https://demo.saleor.io/dashboard" target="_blank" rel="noreferrer">在线体验</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/8162715.png" style="max-width:80%;"></p><p>23、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/life4/textdistance" target="_blank" rel="noreferrer">textdistance</a>：计算文本距离的常用算法库。包含计算文本相似度、多样性、编辑距离、压缩等多种算法，所有算法均采用 Python 实现，容易理解调用方便</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textdistance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">textdistance.hamming.normalized_similarity(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 相似度为 0.75</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/90356012.png" style="max-width:80%;"></p><p>24、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/nschloe/tiptop" target="_blank" rel="noreferrer">tiptop</a>：炫酷的命令行系统监控工具</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>安装：pip install tiptop</span></span>
<span class="line"><span>运行：tiptop</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/409999750.png" style="max-width:80%;"></p><h3 id="swift-项目" tabindex="-1">Swift 项目 <a class="header-anchor" href="#swift-项目" aria-label="Permalink to &quot;Swift 项目&quot;">​</a></h3><p>25、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jacklandrin/OnlySwitch" target="_blank" rel="noreferrer">OnlySwitch</a>：免费开源的 macOS 状态栏一键设置工具。可以轻松对系统功能进行设置，如隐藏桌面图标、清理 Xcode 缓存、一键隐藏刘海儿、进入夜览模式等数十种功能</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/433619938.png" style="max-width:80%;"></p><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><p>26、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/phil-opp/blog_os" target="_blank" rel="noreferrer">blog_os</a>：用 Rust 从零开发一个操作系统的教程。保姆级教程！从空文件夹开始，一步步搭建开发环境，通过原理描述、代码示例讲解操作系统背后的原理。硬要说缺点的话就是教程是英文的，但是配上代码示例读起来不是很费劲。<a href="https://os.phil-opp.com/zh-CN/" target="_blank" rel="noreferrer">中文</a></p><p>27、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/kamranahmedse/design-patterns-for-humans" target="_blank" rel="noreferrer">design-patterns-for-humans</a>：人人都能看懂的设计模式教程。<a href="https://github.com/guanguans/design-patterns-for-humans-cn" target="_blank" rel="noreferrer">中文</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/82227585.png" style="max-width:80%;"></p><p>28、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/electerm/electerm" target="_blank" rel="noreferrer">electerm</a>：一款支持 SSH/SFTP 的终端工具。支持中文和 Windows、Linux、macOS 操作系统</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/106087444.gif" style="max-width:80%;"></p><p>29、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/peng-zhihui/ElectronBot" target="_blank" rel="noreferrer">ElectronBot</a>：自制桌面级小机器人。它具备 USB 通信显示画面功能以及 6 个自由度，支持手势识别和人体关键点检测。这里有配套的全部开发资料和 SDK，让你也可以制作出一个这样有趣的机器人</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/468685658.gif" style="max-width:80%;"></p><p>30、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dwyl/english-words" target="_blank" rel="noreferrer">english-words</a>：大型英语单词文本。它是基于 WordNet 英语词汇数据库整理的文本文件，可用于英语自动提示、自动搜索等功能</p><p>31、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/iggredible/Learn-Vim" target="_blank" rel="noreferrer">Learn-Vim</a>：学习 Vim 的指南。该教程不是“大而全的百科全书”，它着重介绍了 Vim 中最常用的功能，让你可以快速熟悉和使用 Vim。<a href="https://github.com/wsdjeg/Learn-Vim_zh_cn" target="_blank" rel="noreferrer">中文</a></p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/279310322.png" style="max-width:80%;"></p><h3 id="开源书籍" tabindex="-1">开源书籍 <a class="header-anchor" href="#开源书籍" aria-label="Permalink to &quot;开源书籍&quot;">​</a></h3><p>32、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/dragen1860/Deep-Learning-with-TensorFlow-book" target="_blank" rel="noreferrer">Deep-Learning-with-TensorFlow-book</a>：《TensorFlow 深度学习》</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/192155460.png" style="max-width:80%;"></p><p>33、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/phodal/microfrontends" target="_blank" rel="noreferrer">microfrontends</a>：《微前端的那些事儿》 将 Web 应用由单一的单体应用，转变为多个小型前端应用聚合为一的应用</p><h3 id="机器学习" tabindex="-1">机器学习 <a class="header-anchor" href="#机器学习" aria-label="Permalink to &quot;机器学习&quot;">​</a></h3><p>34、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/hibayesian/awesome-automl-papers" target="_blank" rel="noreferrer">awesome-automl-papers</a>：汇集了自动机器学习（AutoML）相关的论文、文章、教程等资源的项目</p><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/111381431.jpeg" style="max-width:80%;"></p><p>35、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/WZMIAOMIAO/deep-learning-for-image-processing" target="_blank" rel="noreferrer">deep-learning-for-image-processing</a>：深度学习在图像处理方面的教程。该项目配以视频的方式介绍知识点和搭建方法，对应的 PTT 在 course_ppt 目录下</p><p>36、<a href="https://hellogithub.com/periodical/statistics/click?target=https://github.com/jina-ai/jina" target="_blank" rel="noreferrer">jina</a>：一款易用的神经搜索框架。神经搜索是指用非结构化数据，搜索非结构化数据。Jina 简化了神经搜索系统的搭建流程，使开发者可以快速构建以图搜图、以文字搜图、问答机器人、照片去重、海量标签分类等应用</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> docarray </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Document, DocumentArray</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jina </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Executor, Flow, requests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PreprocImg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Executor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @requests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, docs: DocumentArray, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kwargs):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> docs:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                d.load_uri_to_image_tensor(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># load</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .set_image_tensor_normalization()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># normalize color</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .set_image_tensor_channel_axis(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                )  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># switch color axis for the PyTorch model later</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span></code></pre></div><p align="center"><img src="https://raw.githubusercontent.com/521xueweihan/img2/master/hellogithub/72/240315046.jpg" style="max-width:80%;"></p><p align="center"><a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub71.md">『上一期』</a> | <a href="https://github.com/521xueweihan/HelloGitHub/issues/899">反馈和建议</a> | <a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub73.md">『下一期』</a></p><hr><p align="center"> 👉 <a href="https://hellogithub.com/periodical">来！推荐开源项目</a> 👈<br> 微信中搜：<strong>HelloGitHub</strong> 关注公众号<br> 不仅能第一时间收到推送，还有回馈粉丝的活动<br> 如果文中的图刷不出来，可以点击 <a href="https://hellogithub.com/periodical/volume/72">这里</a>。 </p><h2 id="赞助" tabindex="-1">赞助 <a class="header-anchor" href="#赞助" aria-label="Permalink to &quot;赞助&quot;">​</a></h2><table><thead><tr><th align="center" style="width:80px;"><a href="https://www.ucloud.cn/site/active/kuaijiesale.html?utm_term=logo&amp;utm_campaign=hellogithub&amp;utm_source=otherdsp&amp;utm_medium=display&amp;ytag=github_hellogithub_otherdsp_display"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png" width="60px"><br><sub>UCloud</sub><br><sub>超值的全球云服务</sub></a></th><th align="center" style="width:80px;"><a href="https://www.upyun.com/"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png" width="60px"><br><sub>CDN</sub><br><sub>开启全网加速</sub></a></th><th align="center" style="width:80px;"><a href="https://github.com/OpenIMSDK/Open-IM-Server"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png" width="60px"><br><sub>OpenIM</sub><br><sub>开源IM力争No.1</sub></a></th><th align="center" style="width:80px;"><a href="https://apifox.cn/a103hello"><img src="https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png" width="60px"><br><sub>Apifox</sub><br><sub>比 Postman 更强大</sub></a></th></tr></thead></table><h2 id="声明" tabindex="-1">声明 <a class="header-anchor" href="#声明" aria-label="Permalink to &quot;声明&quot;">​</a></h2><p><a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"><img alt="知识共享许可协议" style="border-width:0;" src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png"></a><br>本作品采用 <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a> 进行许可。</p>`,107),h=[e];function l(p,r,k,g,o,c){return a(),i("div",null,h)}const u=s(n,[["render",l]]);export{d as __pageData,u as default};
